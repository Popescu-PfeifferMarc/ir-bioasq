<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.0 20120330//EN" "JATS-archivearticle1.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">Nucleic Acids Res</journal-id><journal-id journal-id-type="iso-abbrev">Nucleic Acids Res</journal-id><journal-id journal-id-type="pmc">nar</journal-id><journal-id journal-id-type="publisher-id">Nucleic Acids Research</journal-id><journal-title-group><journal-title>Nucleic Acids Research</journal-title></journal-title-group><issn pub-type="ppub">0305-1048</issn><issn pub-type="epub">1362-4962</issn><publisher><publisher-name>Oxford University Press</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">17170009</article-id><article-id pub-id-type="pmc">PMC1802555</article-id><article-id pub-id-type="doi">10.1093/nar/gkl1018</article-id><article-categories><subj-group subj-group-type="heading"><subject>Computational Biology</subject></subj-group></article-categories><title-group><article-title>Operon prediction using both genome-specific and general genomic information</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Dam</surname><given-names>Phuongan</given-names></name><xref ref-type="aff" rid="au1">1</xref></contrib><contrib contrib-type="author"><name><surname>Olman</surname><given-names>Victor</given-names></name><xref ref-type="aff" rid="au1">1</xref><xref ref-type="aff" rid="au2">2</xref></contrib><contrib contrib-type="author"><name><surname>Harris</surname><given-names>Kyle</given-names></name><xref ref-type="aff" rid="au1">1</xref></contrib><contrib contrib-type="author"><name><surname>Su</surname><given-names>Zhengchang</given-names></name><xref ref-type="aff" rid="au3">3</xref></contrib><contrib contrib-type="author"><name><surname>Xu</surname><given-names>Ying</given-names></name><xref ref-type="aff" rid="au1">1</xref><xref ref-type="aff" rid="au2">2</xref><xref ref-type="corresp" rid="cor1">*</xref></contrib><aff id="au1"><sup>1</sup><institution>Computational Systems Biology Laboratory, Department of Biochemistry and Molecular Biology, University of Georgia</institution><addr-line>Athens, GA, USA</addr-line></aff><aff id="au2"><sup>2</sup><institution>Institute of Bioinformatics, University of Georgia</institution><addr-line>Athens, GA, USA</addr-line></aff><aff id="au3"><sup>3</sup><institution>Center for Bioinformatics Research, Department of Computer Science, University of North Carolina at Charlotte</institution><addr-line>Charlotte, NC, USA</addr-line></aff></contrib-group><author-notes><corresp id="cor1"><sup>*</sup>To whom correspondence should be addressed. Tel: +1 706 542 9779; Fax: +1 706 542 9751; Email: <email>xyn@bmb.uga.edu</email></corresp></author-notes><pub-date pub-type="ppub"><month>1</month><year>2007</year></pub-date><pub-date pub-type="epub"><day>14</day><month>12</month><year>2006</year></pub-date><pub-date pub-type="pmc-release"><day>14</day><month>12</month><year>2006</year></pub-date><!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. --><volume>35</volume><issue>1</issue><fpage>288</fpage><lpage>298</lpage><history><date date-type="received"><day>07</day><month>9</month><year>2006</year></date><date date-type="rev-recd"><day>27</day><month>10</month><year>2006</year></date><date date-type="accepted"><day>30</day><month>10</month><year>2006</year></date></history><permissions><copyright-statement>&#x000a9; 2006 The Author(s)</copyright-statement><copyright-year>2006</copyright-year><license license-type="openaccess"><license-p><!--CREATIVE COMMONS-->This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/2.0/uk/">http://creativecommons.org/licenses/by-nc/2.0/uk/</ext-link>) which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p></license></permissions><abstract><p>We have carried out a systematic analysis of the contribution of a set of selected features that include three new features to the accuracy of operon prediction. Our analyses have led to a number of new insights about operon prediction, including that (i) different features have different levels of discerning power when used on adjacent gene pairs with different ranges of intergenic distance, (ii) certain features are universally useful for operon prediction while others are more genome-specific and (iii) the prediction reliability of operons is dependent on intergenic distances. Based on these new insights, our newly developed operon-prediction program achieves more accurate operon prediction than the previous ones, and it uses features that are most readily available from genomic sequences. Our prediction results indicate that our (non-linear) decision tree-based classifier can predict operons in a prokaryotic genome very accurately when a substantial number of operons in the genome are already known. For example, the prediction accuracy of our program can reach 90.2 and 93.7% on <italic>Bacillus subtilis</italic> and <italic>Escherichia coli</italic> genomes, respectively. When no such information is available, our (linear) logistic function-based classifier can reach the prediction accuracy at 84.6 and 83.3% for <italic>E.coli and B.subtilis</italic>, respectively.</p></abstract></article-meta></front><body><sec><title>INTRODUCTION</title><p>In bacterium, an mRNA molecule (or a transcript) can contain one or multiple genes. In the case of multi-gene transcript, the set of genes found in the transcript is arranged in tandem in the chromosome, and named an operon. Although genes in an operon are in general found to be transcribed together, in some cases the same set of genes under different conditions may give rise to transcripts of different lengths. Functionally, genes (in an operon) transcribed into a single mRNA transcript are found to work in the same pathway or interact with each other, although examples of transcripts containing genes involved in different pathways, such as the <italic>Escherichia coli rpsU-dnaG-rpoD</italic> operon that encodes the 30S ribosomal protein S21, DNA primase and RNA polymerase have been documented (<xref ref-type="bibr" rid="b1">1</xref>). Biologically, organization of multiple genes into an operon serves as a transcription-regulation mechanism that subsequently regulates the activity of pathways and/or cellular responses. Therefore, successful prediction of operons can help to improve our ability in functional annotation of (conserved) hypothetical genes, a major challenge in functional annotation of genomes. Currently, the best prediction programs can reach a prediction accuracy level at 85&#x02013;91% of specificity and sensitivity in terms of finding the correct operonic gene pairs in <italic>Bacillus subtilis</italic> and <italic>E.coli</italic>. In terms of correctly predicting the whole transcription unit (TU) that contains one or more genes, the sensitivity level varies from 50 to 79% in <italic>E.coli</italic> (<xref ref-type="bibr" rid="b2">2</xref>) due to the high false positive rates in classifying adjacent gene pairs.</p><p>It has been shown that a number of genomic features relevant to adjacent gene pairs (on the same strand) are useful for predicting whether the pairs belong to the same operons. These features include (i) the intergenic distance, (ii) the phylogenetic profiles of genes, (iii) the conservation of gene pairs (gene neighbourhood) across multiple genomes, (iv) the functional annotation, such as COG or Riley's classification, (v) the involvement of a gene pair in the same biological pathway, protein complexes or physical interactions and (vi) the correlation of their gene expression patterns. Using these features, a number of computational methods have been developed for operon prediction, including (i) hidden Markov model-based method (<xref ref-type="bibr" rid="b3">3</xref>), (ii) machine learning-based technique (<xref ref-type="bibr" rid="b4">4</xref>), (iii) simple statistical methods (<xref ref-type="bibr" rid="b5">5</xref>), (iv) Bayesian methods (<xref ref-type="bibr" rid="b6">6</xref>&#x02013;<xref ref-type="bibr" rid="b9">9</xref>), (v) graph-theoretic approaches (<xref ref-type="bibr" rid="b10">10</xref>&#x02013;<xref ref-type="bibr" rid="b12">12</xref>), (vi) neural networks (<xref ref-type="bibr" rid="b13">13</xref>), (vii) logistic regression(<xref ref-type="bibr" rid="b14">14</xref>), (viii) support vector machine (<xref ref-type="bibr" rid="b15">15</xref>) and (ix) a few other methods (<xref ref-type="bibr" rid="b2">2</xref>,<xref ref-type="bibr" rid="b16">16</xref>,<xref ref-type="bibr" rid="b17">17</xref>).</p><p>In most of these methods, the predictors were trained and tested on the known operon data of either <italic>E.coli</italic> or <italic>B.subtilis</italic> because only these two organisms have substantial numbers of experimentally verified operons. As a result, a general problem with current methods is that they do not seem to generalize well from one genome to another. For example, an operon-prediction program, trained on <italic>E.coli</italic> data, could have 91% prediction accuracy on (other) <italic>E.coli</italic> operonic gene pairs but have its accuracy dropped to 64% when tested on <italic>B.subtilis</italic> operonic gene pairs (<xref ref-type="bibr" rid="b2">2</xref>). Among factors that could have affected their generalization ability is the (possibly unintentional) use of genome-specific features, leading to performance deduction of these methods when applied to a new genome. Though numerous studies have been carried out to combine different genomic features in various ways for operon prediction, very little has been done to examine the contribution of these features, individually and in combination, for operon prediction in genomes other than the genome(s) on which a prediction program is trained. Another factor that could have affected the generalization ability of the methods is the choice of classification functions. For example, the use of non-linear classification methods, such as Bayesian classification schemes or support vector machines could lead to an over-trained predictor and performance deduction when applied to a new genome. To address these issues, we have evaluated the performance of a number of classification methods for operon prediction on <italic>E.coli</italic> and <italic>B.subtilis</italic> when using a training dataset from the same genome versus a different genome. We have also assessed the usefulness of several information sources that were used in previous operon prediction programs, such as conserved gene neighborhood, phylogenetic profiles and intergenic distances, through comparing the classification errors when these features were used and not used. In addition to the previously used features, we have applied in our prediction program three new features, namely the length ratio between a pair of adjacent genes, Gene Ontology (GO)-based functional similarity between adjacent genes and the frequency of a specific DNA motif in the intergenic region, which seem to be generally useful for operon prediction. Together, we found that a flexible framework of linear and non-linear classification methods and a combination of the aforementioned features have substantially improved the accuracy of prediction and the generalization ability of an operon predictor.</p></sec><sec sec-type="materials|methods"><title>MATERIALS AND METHODS</title><sec><title>Data preparation</title><p>All genome sequences and their annotated genes were downloaded from the GenBank database (<ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/genomes/MICROBES/Complete.html"/>). In this study, we used 258 bacterial and archaeal genomes, and the genome list can be found at <ext-link ext-link-type="uri" xlink:href="http://csbl.bmb.uga.edu/~phd/"/>.</p><p>From the RegulonDB database (version 4.0) (<xref ref-type="bibr" rid="b18">18</xref>), we collected 690 TUs, including 545 unique TUs and 145 overlapped TUs that share common genes. Among the unique TUs, 256 TUs are single-gene TUs and 289 are multi-gene TUs. After removing genes that were deleted from the new version of the <italic>E.coli</italic> files at NCBI, we obtained 707 operonic gene pairs (i.e. adjacent genes within an operon) and 497 boundary pairs. A boundary pair consists of either the upstream adjacent gene and the first gene of the TU, or the last gene of the TU and the adjacent downstream gene, providing that these genes are transcribed in the same direction. From the <italic>B.subtilis</italic> TU database (<xref ref-type="bibr" rid="b8">8</xref>), we collected 992 TUs including 338 unique multi-gene TUs and 645 unique single-gene TUs that yielded 850 operonic gene pairs and 775 boundary pairs.</p></sec><sec><title>Feature scores</title><p>To evaluate the contribution of selected features in operon prediction, we have calculated the numerical values of the features, and then used these values individually and in combination to train a classifier. The features used in our study are (i) the intergenic distance, (ii) the conserved gene neighborhood, (iii) distances between adjacent genes' phylogenetic profiles, (iv) the ratio between the lengths of two adjacent genes and (v) frequencies of specific DNA motifs in the intergenic regions.</p><p><italic>Intergenic distance.</italic>&#x02003;Because the intergenic distance has been shown to be a critical attribute in predicting operon/boundary pairs (<xref ref-type="bibr" rid="b19">19</xref>), we have calculated the intergenic distance (<italic>D</italic><sub>I</sub>) between each adjacent gene pair using a previously described formula [<italic>D</italic><sub>I</sub> = downstream_gene_start &#x02212; (upstream_gene_end + 1)] (<xref ref-type="bibr" rid="b19">19</xref>). Furthermore, by observing the distributions of <italic>D</italic><sub>I</sub> in <italic>E.coli</italic> and <italic>B.subtilis</italic>, we have found that there are very small number of <italic>D</italic><sub>I</sub> values that is lower than &#x02212;50 (i.e. two genes whose sequences are overlapped by 50 nt) whereas most of known gene pairs with <italic>D</italic><sub>I</sub> &#x0003e; 250 are found to be boundary pairs. Therefore, we have used &#x02212;50 and 250 as the lowest and highest cutoff values, respectively, in our study.</p><p><italic>Neighborhood conservation.</italic>&#x02003;We have used a score for measuring the neighborhood conservation of two genes with respect to a group of reference genomes (in our case, all the involved genomes in our study), defined in an earlier work by our laboratory (<xref ref-type="bibr" rid="b20">20</xref>). In brief, the score is defined as: <inline-formula><mml:math id="M1"><mml:mrow><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:msubsup><mml:mrow><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mtext>i</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mtext>j</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msup><mml:mi>G</mml:mi><mml:mtext>k</mml:mtext></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, where <italic>L</italic>(<italic>g</italic><sub>i</sub>, <italic>g</italic><sub>j</sub>, <italic>G</italic><sup>k</sup>) is the log-likelihood of a gene pair to be neighbors in the <italic>k</italic>th genome <italic>G</italic><sup>k</sup>. The log-likelihood score is computed as the probability that <italic>g</italic><sub>i</sub> and <italic>g</italic><sub>j</sub> are neighbors within a distance <italic>d</italic><sub>k(i,j)</sub> in <italic>G</italic><sup>k</sup>, or <italic>L</italic>(<italic>g</italic><sub>i</sub>, <italic>g</italic><sub>j</sub>, <italic>G</italic><sup>k</sup>) = log <italic>P</italic><sub>ij</sub>; <italic>P</italic><sub>ij</sub> is defined as follows:</p><list list-type="roman-lower"><list-item><p><italic>P<sub>ij</sub></italic> = (1 &#x02212; <italic>p</italic><sub>ik</sub>)(1 &#x02212; <italic>p</italic><sub>jk</sub>), if both genes are absent from genome <italic>G</italic><sup>k</sup>,</p></list-item><list-item><p><italic>P</italic><sub>ij</sub> = (1 &#x02212; <italic>p</italic><sub>ik</sub>) <italic>p</italic><sub>jk</sub>, if only gene <italic>j</italic> is present in genome <italic>G</italic><sup>k</sup>,</p></list-item><list-item><p><italic>P</italic><sub>ij</sub> = <italic>p</italic><sub>ik</sub> (1 &#x02212; <italic>p<sub>jk</sub></italic>), if only gene <italic>i</italic> is present in genome <italic>G</italic><sup>k</sup>,</p></list-item><list-item><p><italic>P</italic><sub>ij</sub> = (<italic>p</italic><sub>ik</sub><italic>p</italic><sub>jk</sub><italic>d</italic><sub>k(i,j)</sub> (2<italic>N</italic><sub>k</sub> &#x02212; <italic>d</italic><sub>k(i,j)</sub> &#x02212; 1))/(<italic>N<sub>k</sub></italic> (<italic>N<sub>k</sub></italic> &#x02212; 1)), if genes i and j are present in genome <italic>G</italic><sup>k</sup>.</p></list-item></list><p><italic>d</italic><sub>k(ij)</sub> is the number of genes between <italic>g</italic><sub>i</sub> and <italic>g</italic><sub>j</sub>; <italic>N</italic><sub>k</sub> is the number of genes in genome <italic>G</italic><sup>k</sup>; and <italic>p</italic><sub>ik</sub> is the probability that gene <italic>g</italic><sub>i</sub> is present in genome <italic>G</italic><sup>k</sup>. To compute <italic>p</italic><sub>ik</sub>, all reference genomes were divided into 13 groups based on their affiliated phylum, and then <italic>p</italic><sub>ik</sub> was calculated as the frequency of gene <italic>g</italic><sub>i</sub> present in the phylum that <italic>G</italic><sup>k</sup> belongs to. Our study has showed that small <italic>S</italic> values are generally associated with gene pairs that are functionally related (<xref ref-type="bibr" rid="b20">20</xref>).</p><p><italic>Phylogenetic distance.</italic>&#x02003;Phylogenetic profiles, which measure the co-presence or co-absence of a pair of genes in reference to a group of genomes, have been previously used to predict the functional relatedness of genes (<xref ref-type="bibr" rid="b21">21</xref>). Previous studies have shown that genes with highly similar phylogenetic profiles (i.e. with short distance of the phylogenetic profiles) are often functionally related. To calculate the distance between the phylogenetic profiles of two genes, we used two approaches, namely the Hamming distance and the Shannon entropy distance. For the Hamming distance between two genes A and B, we sum the number of times that only A or B is found in the genome, <inline-formula><mml:math id="M2"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>H</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mtext>i</mml:mtext></mml:msub></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></inline-formula>where <italic>n</italic> is the number of genomes, <italic>d</italic><sub>i</sub> = 0 if the orthologs of A and B are both present or both absent in genome i, and <italic>d</italic><sub>i</sub> = 1 otherwise. The Shannon entropy distance is calculated as <inline-formula><mml:math id="M3"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mtext>E</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mtext>H</mml:mtext></mml:msub><mml:mo>)</mml:mo><mml:msqrt><mml:mrow><mml:mi>E</mml:mi><mml:mo>(</mml:mo><mml:mi>p</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msqrt><mml:mo>,</mml:mo></mml:mrow></mml:math></inline-formula>where <italic>p</italic> is the proportion of 0 identities among all identities in the phylogenetic profiles of gene A and B, and <italic>E</italic>(<italic>p</italic>) = &#x02212;<italic>p</italic> log(<italic>p</italic>) &#x02212; (1&#x02212;<italic>p</italic>) log(1&#x02212;<italic>p</italic>).</p><p>To be thorough, we have calculated this score using, as reference genomes, (i) 258 archaeal and bacterial genomes found at NCBI, (ii) a set of 121 archaeal and bacterial genomes comprised of the largest genome from each genus, (iii) a set of 198 archaeal and bacterial genomes comprised of the largest genome from each species. Based on our preliminary study, we found that the scores obtained from (i) gave the best prediction results. Hence (i) is used in our study described in the Results section.</p><p><italic>Inclusion of short DNA motifs for operon prediction.</italic>&#x02003;Based on our preliminary study, we found that some DNA motifs seem to be often associated with the inter-operonic regions. To select the DNA motifs with the most discerning power (between operon pairs and boundary pairs), we have counted the number of occurrences for each DNA motif in the intergenic region of each gene pair. For each promoter of length <italic>L</italic>, the normalized frequency of occurrences of a DNA motif <italic>M</italic> = (<italic>t</italic><sub>1</sub> &#x02026; <italic>t</italic><sub>d</sub>), <italic>t</italic><sub>i</sub> &#x02208; {<italic>A</italic>, <italic>C</italic>, <italic>G</italic>, <italic>T</italic>}, is calculated as the ratio of observed occurrences and the expected number of occurrences, or
<disp-formula><mml:math id="M4"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>m</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mi>X</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>L</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>d</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo><mml:mo>*</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
whereas <italic>X</italic> is the number of observed occurrences of the motif in our target genome, <italic>d</italic> is the length of the motif and <italic>p</italic> is the expected frequency of this motif in the genome, assuming independence of nucleotides in the sequence, i.e. <inline-formula><mml:math id="M5"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:msubsup><mml:mo>&#x0220f;</mml:mo><mml:mrow><mml:mtext>i</mml:mtext><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>d</mml:mi></mml:msubsup><mml:mi>p</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mtext>i</mml:mtext></mml:msub><mml:mo>)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math></inline-formula>where <italic>p</italic>(<italic>t</italic><sub>i</sub>) is the frequency of nucleotide <italic>t</italic><sub>i</sub> in the promoter set. For each motif with length ranging from 3 to 5 nt, we considered all possible combination of A, C, G and T, yielding 64 three-letter motifs, 256 four-letter motifs and 1024 five-letter motifs.</p><p>To calculate the motif frequencies, for each gene pair we extracted 100 nt upstream of the translational start site of the downstream gene. The number of times a motif is present in this sequence is counted and then normalized. To select DNA motifs with possibly discerning power between operonic and boundary gene pairs, we have used <italic>K</italic>-mean method to cluster the normalized frequencies of each motif into two groups. After clustering, each cluster is assigned to one of the two classes, operon or boundary, based on the composition of gene pairs in the cluster, and the classification error rate was calculated. After all motifs of length ranging from 3 to 5 letters are considered, we rank the motifs according to their classification errors. We found that the top motifs are consistent in both <italic>E.coli</italic> and <italic>B.subtilis</italic> datasets. Hence we have included the scores of six top-ranked DNA motifs, TTT, ATA, TTTT, TATA, TTTTT and TTTTC, in the feature list for further evaluation. Later on, we used a formula described in the Supplementary Data to confirm that the motif is significantly over-represented in the genome.</p><p><italic>Similarity score between GO terms of gene pairs.</italic>&#x02003;Each gene can have a GO number (<ext-link ext-link-type="uri" xlink:href="http://www.geneontology.org/"/>) indicating its biological function. We have previously developed a scoring scheme for measuring the GO-based functional similarity between a pair of genes (<xref ref-type="bibr" rid="b20">20</xref>). In brief, the GO similarity score <italic>s</italic>(<italic>V</italic><sub>i</sub>,<italic>V</italic><sub>j</sub>) of a gene pair <italic>V</italic><sub>i</sub> and <italic>V</italic><sub>j</sub> is the number of common terms between paths in the two GO graphs <italic>V</italic><sub>i</sub>, <italic>V</italic><sub>j</sub> induced by the GO terms of each gene. The GO graph induced by <italic>V</italic><sub>i</sub> is a direct acyclic graph that includes <italic>V</italic><sub>i</sub> at the bottom most level of the graph and its ancestor GO terms at the upper levels. Then, the <italic>S</italic><sub>GO</sub>(<italic>g</italic><sub>i</sub>,<italic>g</italic><sub>j</sub>) = max <italic>s</italic>(<italic>V</italic><sub>i</sub>,<italic>V</italic><sub>j</sub>), where maximum is taken over all graphs <italic>V</italic><sub>i</sub>, <italic>V</italic><sub>j</sub> induced from GO of <italic>V</italic><sub>i</sub> and <italic>V</italic><sub>j</sub>. We have previously shown that the larger the score, the more likely that two genes are functionally related (<xref ref-type="bibr" rid="b20">20</xref>).</p><p><italic>Length ratio between a pair of genes.</italic>&#x02003;The score is calculated as the natural log of the length ratio of upstream gene and downstream gene, or <italic>L =</italic> ln(<italic>l</italic><sub>i</sub><italic>/l</italic><sub>j</sub>)<italic>, j = i</italic> + 1, whereas <italic>l</italic><sub>i</sub> and <italic>l</italic><sub>j</sub> are the length of the genes. The data are shown in the Supplementary Table 4.</p></sec><sec><title>Classification of gene pairs</title><p>We have utilized an existing Matlab toolbox freely available named PRTools and tried a number of different classification functions in this toolbox. Detailed discussions and implemented algorithms used to create these classifiers can be found at <ext-link ext-link-type="uri" xlink:href="http://130.161.42.18/prtools/prtools.html"/>.</p><p>We have tested 11 classification functions, both linear and non-linear, provided in toolbox, on our training data. For each classification function, we have carried out the following procedure to assess the performance in separating operonic gene pairs from boundary gene pairs: (i) we randomly partition the training dataset into two subsets, named training set and testing set; (ii) we train a classifier using a provided classification function on the training set and (iii) we validate the trained classifier using the testing set and record the classification error rate. We run this procedure 100 times for each classification function, and then select the function with the lowest classification error rate as the optimal classifier for this particular classification function. In addition, we tested each trained classifier on another genome to assess the classifier's generalization ability.</p></sec><sec><title>Performance measurement</title><p>We have used the following measures to assess the performance of our classifiers: (i) sensitivity, (ii) specificity, (iii) the accuracy and (iv) classification error rate, which are calculated as follows:
<disp-formula><mml:math id="M6"><mml:mrow><mml:mtext>Sensitivity</mml:mtext><mml:mtext>&#x02009;</mml:mtext><mml:mo>(</mml:mo><mml:msub><mml:mtext>S</mml:mtext><mml:mtext>T</mml:mtext></mml:msub><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mtext>TP</mml:mtext></mml:mrow><mml:mrow><mml:mtext>WO</mml:mtext></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula>
<disp-formula><mml:math id="M7"><mml:mrow><mml:msub><mml:mrow><mml:mtext>Specificity</mml:mtext><mml:mo>(</mml:mo><mml:mtext>P</mml:mtext></mml:mrow><mml:mtext>T</mml:mtext></mml:msub><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mtext>TP</mml:mtext></mml:mrow><mml:mrow><mml:mtext>TP</mml:mtext><mml:mo>+</mml:mo><mml:mtext>FP</mml:mtext></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula>
<disp-formula><mml:math id="M8"><mml:mrow><mml:mtext>Accuracy</mml:mtext><mml:mo>(</mml:mo><mml:mtext>A</mml:mtext><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mtext>TP</mml:mtext><mml:mo>+</mml:mo><mml:mtext>TN</mml:mtext></mml:mrow><mml:mrow><mml:mtext>WO</mml:mtext><mml:mo>+</mml:mo><mml:mtext>TUB</mml:mtext></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula>
<disp-formula><mml:math id="M9"><mml:mrow><mml:mtext>Error&#x000a0;rate</mml:mtext><mml:mo>=</mml:mo><mml:mtext>1</mml:mtext><mml:mo>&#x02212;</mml:mo><mml:mtext>A</mml:mtext><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
where TP is the number of true positive (operonic) pairs being predicted correctly, TN is the number of true negative (boundary) pairs being predicted correctly, FP is the number of false positive pairs (i.e. boundary pairs predicted to be operonic pairs), FN is the number of false negative pairs(i.e. operonic pairs predicted to be boundary pairs), WO is the total number of operonic pairs in the dataset, and TUB is the total number of boundary pairs in the dataset. We understand that our accuracy measure is calculated differently from that used by others, which is defined as the average of the sensitivity S<sub>T</sub> and the specificity P<sub>T</sub>. To calculate the sensitivity and specificity for prediction of boundary pairs, we substituted TN and FN for TP and FP from the above formula.</p></sec></sec><sec sec-type="results"><title>RESULTS</title><sec><title>Operon prediction using different classification functions</title><p>Among features that are often used for operon prediction, the length of the intergenic region between a pair of adjacent genes was reported to be one of the most reliable indicators of whether it is an operon pair or a boundary pair (<xref ref-type="bibr" rid="b19">19</xref>). To examine the relationship between the intergenic distance and a gene pair's being an operonic or a boundary pair, we have calculated the frequency distributions of intergenic distances at intervals of 20 bases for a set of operonic gene pairs and a set of boundary gene pairs found in the known <italic>E.coli</italic> and <italic>B.subtilis</italic> operon sets, and then compared the frequencies of operonic pairs and the frequencies of boundary pairs at each interval of the intergenic distance. We found that when the intergenic distances between gene pairs are &#x0003c;40 nt in <italic>E.coli</italic> and <italic>B.subtilis</italic>, &#x0223c;85&#x02013;92% of the gene pairs are operonic pairs, whereas when the intergenic distances between gene pairs are &#x0003e;200 nt in <italic>E.coli</italic> and <italic>B.subtilis</italic>, &#x0223c;85&#x02013;95% of the gene pairs are boundary pairs. When the intergenic distances between gene pairs are &#x0003e;40 but &#x0003c;200 nt, the ratio of the frequency of operonic gene pairs and the frequency of boundary gene pairs reduces as the intergenic distance increases (Supplementary Table 1). These observations led us to closely examine the relationship between the performance of our classifiers and the intergenic distances between adjacent gene pairs. We have employed two approaches to examine this. Our first approach, which is referred as &#x02018;whole data-based training&#x02019;, was to use either <italic>E.coli</italic> or <italic>B.subtilis</italic> data as a whole. In the second approach, which is referred as &#x02018;subgroup-based training', we divided the known dataset of either <italic>E.coli</italic> or <italic>B.subtilis</italic> into three groups based on the intergenic distance, and then selected the optimum classifier for each group. The three groups are (i) U40 for gene pairs whose intergenic distances are &#x0003c;40 nt, (ii) U200 for gene pairs whose intergenic distances are &#x0003c;200 nt but &#x02265;40 nt and (iii) O200 for gene pairs whose intergenic distances are &#x02265;200 nt. The total classification error of the whole dataset is calculated based on the classification errors of these subgroups. The examination results are given later in this section.</p><p>To derive a set of useful features for operon-boundary prediction, we have computed scores for all features listed in the Feature scores, including three new features: the frequencies of six DNA motifs, the GO-based functional similarity between adjacent genes, and the ratio between the lengths of two consecutive genes (The data are shown in the Supplementary Table 4). These features in different combinations were used to train a linear classifier, and the features that give low classification error rates for both <italic>B.subtilis</italic> and <italic>E.coli</italic> datasets were identified as the core features for further studies in this section and following sections. This set of core features include the distances between adjacent genes' phylogenetic profiles, the frequencies of the DNA motif (TTTTT) found in the intergenic regions, the intergenic distances and the GO-based functional similarity scores. The contribution by each of these as well as other features to the prediction accuracy is addressed later in Contribution of selected features to operon prediction.</p><p>The average classification errors for 100 classification trials using the optimal classifiers (see Classification of gene pairs) are shown in <xref ref-type="table" rid="tbl1">Tables 1</xref> and <xref ref-type="table" rid="tbl2">2</xref>. In each trial, we used the default setting of the classifiers, and calculated the average classification errors for the testing data. The optimal classifier was selected based on the procedure outlined in Classification of gene pairs. Although we have tested classifiers using all classification methods available in the PRTools package, we only report the top four methods that give smallest average classification errors in <xref ref-type="table" rid="tbl1">Tables 1</xref> and <xref ref-type="table" rid="tbl2">2</xref>, and the remaining results can be found in Supplementary Table 2. From these results, we have the following key observations (A) and (B).</p><table-wrap id="tbl1" position="float"><label>Table 1</label><caption><p>The average classification errors of various linear classifiers and non-linear classifiers (*) when using whole data-based training approach (All), or subgroup-based training approach (Subgroup): the training and the testing sets are from the same genome</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="1" colspan="1">Classifier</th><th colspan="2" align="left" rowspan="1"><italic>E.coli</italic></th><th colspan="2" align="left" rowspan="1"><italic>B.subtilis</italic></th></tr><tr><th rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1">All</th><th align="left" rowspan="1" colspan="1">Subgroup</th><th align="left" rowspan="1" colspan="1">All</th><th align="left" rowspan="1" colspan="1">Subgroup</th></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">Loglc</td><td align="char" char="." rowspan="1" colspan="1">15.80</td><td align="char" char="." rowspan="1" colspan="1">14.29</td><td align="char" char="." rowspan="1" colspan="1">17.16</td><td align="char" char="." rowspan="1" colspan="1">16.83</td></tr><tr><td align="left" rowspan="1" colspan="1">Fisherc</td><td align="char" char="." rowspan="1" colspan="1">16.29</td><td align="char" char="." rowspan="1" colspan="1">14.62</td><td align="char" char="." rowspan="1" colspan="1">17.16</td><td align="char" char="." rowspan="1" colspan="1">16.87</td></tr><tr><td align="left" rowspan="1" colspan="1">Naivebc<sup>*</sup></td><td align="char" char="." rowspan="1" colspan="1">13.98</td><td align="char" char="." rowspan="1" colspan="1">12.88</td><td align="char" char="." rowspan="1" colspan="1">17.17</td><td align="char" char="." rowspan="1" colspan="1">16.03</td></tr><tr><td align="left" rowspan="1" colspan="1">Treec<sup>*</sup></td><td align="char" char="." rowspan="1" colspan="1">20.72</td><td align="char" char="." rowspan="1" colspan="1">9.91</td><td align="char" char="." rowspan="1" colspan="1">31.84</td><td align="char" char="." rowspan="1" colspan="1">15.16</td></tr></tbody></table></table-wrap><table-wrap id="tbl2" position="float"><label>Table 2</label><caption><p>The average classification errors of various linear classifiers and non-linear classifiers (*) when using whole data-based training approach (All), or subgroup-based training approach (Subgroup): the training set is from <italic>B.subtilis</italic> and the testing set is from <italic>E.coli</italic> (column 2&#x02013;3) and the other training set is from <italic>E.coli</italic> and testing set is from <italic>B.subtilis</italic> (column 4&#x02013;5)</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="1" colspan="1">Classifier</th><th colspan="2" align="left" rowspan="1"><italic>E.coli</italic></th><th colspan="2" align="left" rowspan="1"><italic>B.subtilis</italic></th></tr><tr><th rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1">All</th><th align="left" rowspan="1" colspan="1">Subgroup</th><th align="left" rowspan="1" colspan="1">All</th><th align="left" rowspan="1" colspan="1">Subgroup</th></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">Loglc</td><td align="char" char="." rowspan="1" colspan="1">16.95</td><td align="char" char="." rowspan="1" colspan="1">15.56</td><td align="char" char="." rowspan="1" colspan="1">17.60</td><td align="char" char="." rowspan="1" colspan="1">18.32</td></tr><tr><td align="left" rowspan="1" colspan="1">Fisherc</td><td align="char" char="." rowspan="1" colspan="1">16.92</td><td align="char" char="." rowspan="1" colspan="1">16.32</td><td align="char" char="." rowspan="1" colspan="1">17.57</td><td align="char" char="." rowspan="1" colspan="1">18.22</td></tr><tr><td align="left" rowspan="1" colspan="1">Naivebc<sup>*</sup></td><td align="char" char="." rowspan="1" colspan="1">17.63</td><td align="char" char="." rowspan="1" colspan="1">18.35</td><td align="char" char="." rowspan="1" colspan="1">20.27</td><td align="char" char="." rowspan="1" colspan="1">18.25</td></tr><tr><td align="left" rowspan="1" colspan="1">Treec<sup>*</sup></td><td align="char" char="." rowspan="1" colspan="1">41.44</td><td align="char" char="." rowspan="1" colspan="1">21.59</td><td align="char" char="." rowspan="1" colspan="1">38.55</td><td align="char" char="." rowspan="1" colspan="1">23.32</td></tr></tbody></table></table-wrap><p>(A) When training and testing data are from the same genome, non-linear classifiers yield lower classification errors. In cases like <italic>E.coli</italic> or <italic>B.subtilis</italic>, a substantial number of operons have been obtained from previous experiments (<xref ref-type="bibr" rid="b8">8</xref>,<xref ref-type="bibr" rid="b19">19</xref>). For such cases, we found that very low classification errors can be achieved by dividing the dataset into groups according to the intergenic distance and by using a non-linear classifier, at 9.9% for <italic>E.coli</italic> and 15.2% for <italic>B.subtilis</italic>, as shown in <xref ref-type="table" rid="tbl1">Table 1</xref>. By comparing the strategy of whole data-based training and the strategy of subgroup-based training, we found the latter in general yields better results, as shown in <xref ref-type="table" rid="tbl1">Table 1</xref>. By comparing the prediction results between non-linear and linear classifiers, we found that the Naive Bayesian classifiers consistently perform well on several datasets, although decision tree-based classifiers give the most dramatic improvement in subgroup-based training. Our data suggests a new strategy for operon prediction, i.e. with a well-studied genome, such as <italic>E.coli</italic> or <italic>B.subtilis</italic>, non-linear classifiers, such as decision tree-based or Naive Bayesian method, when used in conjunction with subgroup-based training, will lead to an improvement in the prediction accuracy.</p><p>(B) Linear classifiers give the most generalization ability. An important application of operon prediction is to predict operons in new genomes using known operon data from well-studied genomes, such as <italic>B.subtilis</italic> or <italic>E.coli</italic>. Our evaluation shows that this approach increases the classification errors. In detail, we found that when using <italic>E.coli</italic>-trained classifiers to predict operonic pairs in <italic>B. subtilis</italic>, the smallest average classification errors is 17.57%, compared to 15.16% if the classifiers were trained with <italic>B.subtilis</italic> data, as shown in <xref ref-type="table" rid="tbl1">Tables 1</xref> and <xref ref-type="table" rid="tbl2">2</xref>. When using the <italic>B.subtilis</italic>-trained classifiers to predict operonic pairs in <italic>E.coli</italic>, the smallest average classification errors is 15.56%, compared with 9.91% if the classifiers were trained with <italic>E.coli</italic> data, as shown in <xref ref-type="table" rid="tbl1">Tables 1</xref> and <xref ref-type="table" rid="tbl2">2</xref>. Therefore, the increases of classification errors are from 2.4 to 5.8%. We also found that linear classifiers whose methods are based on the maximization of the likelihood criterion using the logistic function or the minimization of the errors in the least square sense consistently perform well across all datasets. By comparing the strategy of using whole data-based training and the strategy of using subgroup-based training, we found that the latter do not substantially reduce the classification errors, as shown in <xref ref-type="table" rid="tbl2">Table 2</xref>. Among the top two linear classifiers, the differences in classification errors, when changing from using the whole data-based training approach to using subgroup-based training approach, range from &#x02212;0.7 to 1.4%, much smaller than the improvement we found when using decision tree-based classifiers and the subgroup-based training approach, as shown in the above section (A). Therefore, for generalization purpose, dividing the dataset into subgroups based on the intergenic distance does not give a clear advantage over using the whole dataset.</p><p>Together, our study suggests a new protocol for predicting operons in prokaryotic genomes that includes (i) with a well-studied genome, such as <italic>E.coli</italic> or <italic>B.subtilis</italic>, the dataset should be divided into subgroups based on the intergenic distance and trained with a non-linear classifier using the decision tree-based method or the Na&#x000ef;ve Bayesian method and (ii) when the goal of training a classifier is to apply to other genomes, a linear classifier should be used, and the best methods are the maximization of the likelihood criterion using the logistic function and the minimization of the errors in the least square sense.</p></sec><sec><title>Contribution of selected features to operon prediction</title><p>Among information sources having been used for operon prediction, the most reliable features are derived directly from genomic sequences, such as the intergenic distance, the ratio between the lengths of an adjacent pair of genes, and frequencies of specific DNA motifs in the intergenic region. Features computed through mapping orthologous genes across genomes, such as neighborhood conservation scores or similarities of phylogenetic profiles can also be readily obtained, although they are not as reliable. Furthermore, experimentally derived data, such as GO annotation, the Riley's classification, knowledge of a gene pair being in the same biological pathway or complex, and correlation of gene expression patterns measured using microarray experiments may not be readily available for most gene pairs because very few organisms have genome-scale experimental data as outlined above. Because it is desirable to use features that are readily obtainable for operon prediction, we have avoided using many experimentally-derived features in our study.</p><p>In Operon prediction using different classification functions, we have used a set of core features found through our preliminary study that give good prediction results. These features include (i) the distance of the phylogenetic profiles, (ii) the frequency of motif TTTTT in the intergenic region, (iii) the intergenic distance and (iv) the GO-based functional similarity score. We now examine each feature in the core set and expand this core set to include a few other features. To evaluate the usefulness of these features in improving the performance of our classifiers, we trained our classifiers with or without these groups of features and compared the results.</p><p>(A) Prediction accuracy is affected by the length of the intergenic distance. As discussed in Operon prediction using different classification functions, the ratios of the frequency of operon pairs and the frequency of boundary pairs changes as the intergenic distance changes, which led us to closely examine the dependency of the classification errors and the intergenic distance, while previous studies often examine the prediction accuracy on the whole dataset. To address the issue, we report the average classification errors when the training and testing sets are from the same genome, and the dataset was divided into three groups based on the intergenic distance, resulting in three classifiers per classification method per dataset. This approach was shown in Operon prediction using different classification functions to be useful for operon prediction when the training and testing data are from the same genome. Our results in <xref ref-type="table" rid="tbl3">Table 3</xref> suggest that (i) the U200 groups in both <italic>E.coli</italic> and <italic>B.subtilis</italic> yield the highest classification errors, averaging from 15 to 24%. (ii) Classifiers using decision tree based-method greatly reduce the classification errors in the O200 groups, resulting in almost 42% reduction in error rates, as shown in <xref ref-type="table" rid="tbl3">Table 3</xref>. We also found when the <italic>E.coli</italic>-trained classifiers were used to predict operonic pairs from <italic>B.subtilis</italic> genome, or when <italic>B.subtilis</italic>-trained classifiers were used to predict operonic pairs from <italic>E.coli</italic> genome, the U200 groups also yield the highest average classification errors, and the result are reported in the Supplementary Table 3. Similar to our results, Zhang <italic>et al</italic>. (<xref ref-type="bibr" rid="b15">15</xref>) reported that most of the miss-assigned operonic pairs have the intergenic distance between 50 and 200 bases. Our results suggest that operon-pair prediction for adjacent gene pairs with intergenic distance between 40 and 200 bases is less reliable than other situations.</p><table-wrap id="tbl3" position="float"><label>Table 3</label><caption><p>The dependency of the classification errors on the intergenic distances of gene pairs</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="1" colspan="1">Classifier</th><th colspan="3" align="left" rowspan="1"><italic>E.coli</italic></th><th colspan="3" align="left" rowspan="1"><italic>B.subtilis</italic></th></tr><tr><th rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1">U40</th><th align="left" rowspan="1" colspan="1">U200</th><th align="left" rowspan="1" colspan="1">O200</th><th align="left" rowspan="1" colspan="1">U40</th><th align="left" rowspan="1" colspan="1">U200</th><th align="left" rowspan="1" colspan="1">O200</th></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">Naivebc<sup>*</sup></td><td align="left" rowspan="1" colspan="1">8.75 &#x000b1; 0.62</td><td align="left" rowspan="1" colspan="1">21.14 &#x000b1; 2.13</td><td align="left" rowspan="1" colspan="1">7.56 &#x000b1; 1.18</td><td align="left" rowspan="1" colspan="1">12.16 &#x000b1; 0.38</td><td align="left" rowspan="1" colspan="1">22.16 &#x000b1; 1.48</td><td align="left" rowspan="1" colspan="1">8.63 &#x000b1; 0.97</td></tr><tr><td align="left" rowspan="1" colspan="1">Treec<sup>*</sup></td><td align="left" rowspan="1" colspan="1">8.16 &#x000b1; 0.95</td><td align="left" rowspan="1" colspan="1">15.06 &#x000b1; 2.32</td><td align="left" rowspan="1" colspan="1">4.35 &#x000b1; 1.31</td><td align="left" rowspan="1" colspan="1">9.41 &#x000b1; 1.46</td><td align="left" rowspan="1" colspan="1">23.95 &#x000b1; 1.85</td><td align="left" rowspan="1" colspan="1">5.17 &#x000b1; 1.23</td></tr></tbody></table><table-wrap-foot><fn><p>The dataset was divided into three subgroups including U40, U200 and O200 based on the intergenic distance of the gene pairs. The non-linear classifiers were trained using the subgroup-based training approach. The training and testing sets are from the same genome.</p></fn></table-wrap-foot></table-wrap><p>(B) In subgroup-based training, the distance of the phylogenetic profiles, the neighborhood conservation score and length ratio are critical features contributing to operon-prediction accuracy. We have first trained decision tree-based classifiers with various combinations of the core features, using half of the data from a genome as a training set, and the other half as the testing set. To test whether other features may also contribute to the improvement in the classification of gene pairs, we added new features including conserved neighborhood information, the remaining five DNA motifs discussed in the Materials and Methods, and the ratio of the lengths of a gene pair to our core feature set. As shown in <xref ref-type="table" rid="tbl4">Table 4</xref>, when comparing the performance, we found that among the tested features, the length ratios between the gene pairs give the most discerning power in all groups of both <italic>E.coli and B.subtilis</italic> genomes. In addition, both distances of the phylogenetic profiles and the neighborhood conservation scores also give good improvement to the prediction accuracy. However, the information provided by the phylogenetic profiles and the neighborhood conservation scores appears to overlap each other because addition of both features to the length ratio feature does not significantly improve the prediction accuracy when comparing to cases using only one of the two features, as shown in <xref ref-type="table" rid="tbl4">Table 4</xref>. Although the distance of phylogenetic profiles between a gene pair was previously used as a feature in operon prediction, it was not shown to be a main contributor to the predictors by any previous studies (<xref ref-type="bibr" rid="b13">13</xref>,<xref ref-type="bibr" rid="b15">15</xref>). Our results suggest that small phylogenetic distance is a very strong indicator of a gene pair belonging to the same operon when the intergenic distance of the gene pair is &#x0003e;200 nt.</p><table-wrap id="tbl4" position="float"><label>Table 4</label><caption><p>The contribution of features in improving the classification errors of the decision tree-based classifier</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="1" colspan="1">Phylo</th><th align="left" rowspan="1" colspan="1">Length</th><th align="left" rowspan="1" colspan="1">IG</th><th align="left" rowspan="1" colspan="1">TTTTT</th><th align="left" rowspan="1" colspan="1">Neighbor</th><th align="left" rowspan="1" colspan="1">GO</th><th colspan="3" align="left" rowspan="1"><italic>E.coli</italic></th><th colspan="3" align="left" rowspan="1"><italic>B.subtilis</italic></th></tr><tr><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1">U40</th><th align="left" rowspan="1" colspan="1">U200</th><th align="left" rowspan="1" colspan="1">O200</th><th align="left" rowspan="1" colspan="1">U40</th><th align="left" rowspan="1" colspan="1">U200</th><th align="left" rowspan="1" colspan="1">O200</th></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">8.08 &#x000b1; 0.50</td><td align="left" rowspan="1" colspan="1">19.91 &#x000b1; 2.49</td><td align="left" rowspan="1" colspan="1">5.26 &#x000b1; 0.53</td><td align="left" rowspan="1" colspan="1">10.03 &#x000b1; 0.6</td><td align="left" rowspan="1" colspan="1">26.09 &#x000b1; 0.90</td><td align="left" rowspan="1" colspan="1">5.39 &#x000b1; 0.54</td></tr><tr><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">6.44 &#x000b1; 0.26</td><td align="left" rowspan="1" colspan="1">15.41 &#x000b1; 0.53</td><td align="left" rowspan="1" colspan="1">5.13 &#x000b1; 0.49</td><td align="left" rowspan="1" colspan="1">8.28 &#x000b1; 0.34</td><td align="left" rowspan="1" colspan="1">18.02 &#x000b1; 0.37</td><td align="left" rowspan="1" colspan="1">5.57 &#x000b1; 0.40</td></tr><tr><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">9.47 &#x000b1; 0.02</td><td align="left" rowspan="1" colspan="1">35.69 &#x000b1; 0.85</td><td align="left" rowspan="1" colspan="1">9.56 &#x000b1; 0.36</td><td align="left" rowspan="1" colspan="1">12.37 &#x000b1; 0.03</td><td align="left" rowspan="1" colspan="1">28.16 &#x000b1; 0.39</td><td align="left" rowspan="1" colspan="1">9.86 &#x000b1; 0.04</td></tr><tr><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">9.47 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">40.28 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">9.91 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">12.37 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">30.98 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">9.87 &#x000b1; 0.00</td></tr><tr><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">7.61 &#x000b1; 0.52</td><td align="left" rowspan="1" colspan="1">23.74 &#x000b1; 1.13</td><td align="left" rowspan="1" colspan="1">5.19 &#x000b1; 0.49</td><td align="left" rowspan="1" colspan="1">10.05 &#x000b1; 0.38</td><td align="left" rowspan="1" colspan="1">22.23 &#x000b1; 0.61</td><td align="left" rowspan="1" colspan="1">7.22 &#x000b1; 0.72</td></tr><tr><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">9.47 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">34.2 &#x000b1; 0.56</td><td align="left" rowspan="1" colspan="1">7.35 &#x000b1; 1.13</td><td align="left" rowspan="1" colspan="1">12.30 &#x000b1; 0.07</td><td align="left" rowspan="1" colspan="1">29.72 &#x000b1; 0.27</td><td align="left" rowspan="1" colspan="1">9.62 &#x000b1; 0.22</td></tr><tr><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">6.07 &#x000b1; 0.34</td><td align="left" rowspan="1" colspan="1">14.81 &#x000b1; 0.70</td><td align="left" rowspan="1" colspan="1">5.24 &#x000b1; 0.52</td><td align="left" rowspan="1" colspan="1">8.47 &#x000b1; 0.38</td><td align="left" rowspan="1" colspan="1">17.62 &#x000b1; 0.44</td><td align="left" rowspan="1" colspan="1">4.71 &#x000b1; 0.24</td></tr><tr><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">5.87 &#x000b1; 0.30</td><td align="left" rowspan="1" colspan="1">15.59 &#x000b1; 0.67</td><td align="left" rowspan="1" colspan="1">5.05 &#x000b1; 0.52</td><td align="left" rowspan="1" colspan="1">8.45 &#x000b1; 0.35</td><td align="left" rowspan="1" colspan="1">17.46 &#x000b1; 0.46</td><td align="left" rowspan="1" colspan="1">5.21 &#x000b1; 0.42</td></tr><tr><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">5.82 &#x000b1; 0.41</td><td align="left" rowspan="1" colspan="1">14.29 &#x000b1; 0.79</td><td align="left" rowspan="1" colspan="1">4.53 &#x000b1; 0.64</td><td align="left" rowspan="1" colspan="1">7.96 &#x000b1; 0.33</td><td align="left" rowspan="1" colspan="1">17.60 &#x000b1; 0.62</td><td align="left" rowspan="1" colspan="1">4.53 &#x000b1; 0.39</td></tr><tr><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">5.79 &#x000b1; 0.29</td><td align="left" rowspan="1" colspan="1">13.60 &#x000b1; 0.36</td><td align="left" rowspan="1" colspan="1">4.81 &#x000b1; 0.62</td><td align="left" rowspan="1" colspan="1">8.35 &#x000b1; 0.33</td><td align="left" rowspan="1" colspan="1">15.97 &#x000b1; 0.45</td><td align="left" rowspan="1" colspan="1">5.16 &#x000b1; 0.32</td></tr><tr><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">5.72 &#x000b1; 0.19</td><td align="left" rowspan="1" colspan="1">12.82 &#x000b1; 0.63</td><td align="left" rowspan="1" colspan="1">4.43 &#x000b1; 0.51</td><td align="left" rowspan="1" colspan="1">8.29 &#x000b1; 0.33</td><td align="left" rowspan="1" colspan="1">16.21 &#x000b1; 0.41</td><td align="left" rowspan="1" colspan="1">5.07 &#x000b1; 0.30</td></tr></tbody></table><table-wrap-foot><fn><p>The testing and training sets are from the same genome, and features are present (+) or absent (&#x02212;) from the combination. Besides shown features, no other feature is used. The dataset was divided into three subgroups including U40, U200 and O200 based on the intergenic distance of the gene pairs.</p></fn></table-wrap-foot></table-wrap><p>Our data are the first to show that the ratio of the lengths of a gene pair is a powerful discerning feature for operon prediction. When inspecting the natural log of the length ratios, we found that boundary gene pairs are often associated with small values of the natural log of the length ratio, as shown in Supplementary Table 4. Because the length ratio is calculated as the ratio of the upstream-gene length to the downstream-gene length, our results suggest that the length of the downstream gene in proportion to the upstream gene affects the chance of the two genes being transcribed together. Besides the consistent improvement in classification errors found when the length ratio feature is used, the inclusion of other features including the intergenic distance, the GO-based functional similarity score and other DNA motifs also led to a consistent but moderate reduction in classification errors in the U200 groups as shown in <xref ref-type="table" rid="tbl4">Table 4</xref>.</p><table-wrap id="tbl5" position="float"><label>Table 5</label><caption><p>The contribution of features in improving the classification errors of the logistic function-based classifier</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="1" colspan="1">IG</th><th align="left" rowspan="1" colspan="1">Neighbor</th><th align="left" rowspan="1" colspan="1">GO</th><th align="left" rowspan="1" colspan="1">Length</th><th align="left" rowspan="1" colspan="1">Phylo</th><th align="left" rowspan="1" colspan="1">TTTTT</th><th align="left" rowspan="1" colspan="1">ATA</th><th colspan="2" align="left" rowspan="1"><italic>E.coli</italic></th><th rowspan="1" colspan="1"/><th colspan="3" align="left" rowspan="1"><italic>B.subtilis</italic></th></tr><tr><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1">U40</th><th align="left" rowspan="1" colspan="1">U200</th><th align="left" rowspan="1" colspan="1">O200</th><th align="left" rowspan="1" colspan="1">U40</th><th align="left" rowspan="1" colspan="1">U200</th><th align="left" rowspan="1" colspan="1">O200</th></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">9.47 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">33.77 &#x000b1; 0.53</td><td align="left" rowspan="1" colspan="1">9.91 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">12.37 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">28.95 &#x000b1; 0.12</td><td align="left" rowspan="1" colspan="1">9.87 &#x000b1; 0.00</td></tr><tr><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">9.47 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">32.16 &#x000b1; 0.57</td><td align="left" rowspan="1" colspan="1">9.91 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">12.37 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">27.98 &#x000b1; 0.86</td><td align="left" rowspan="1" colspan="1">9.64 &#x000b1; 0.24</td></tr><tr><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">9.47 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">31.75 &#x000b1; 0.93</td><td align="left" rowspan="1" colspan="1">9.91 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">12.36 &#x000b1; 0.08</td><td align="left" rowspan="1" colspan="1">27.38 &#x000b1; 0.97</td><td align="left" rowspan="1" colspan="1">9.82 &#x000b1; 0.14</td></tr><tr><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">9.47 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">33.01 &#x000b1; 0.63</td><td align="left" rowspan="1" colspan="1">9.91 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">12.37 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">28.93 &#x000b1; 0.27</td><td align="left" rowspan="1" colspan="1">9.87 &#x000b1; 0.00</td></tr><tr><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">9.51 &#x000b1; 0.07</td><td align="left" rowspan="1" colspan="1">33.29 &#x000b1; 0.65</td><td align="left" rowspan="1" colspan="1">9.91 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">13.11 &#x000b1; 0.57</td><td align="left" rowspan="1" colspan="1">29.07 &#x000b1; 0.78</td><td align="left" rowspan="1" colspan="1">9.87 &#x000b1; 0.00</td></tr><tr><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">9.47 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">34.03 &#x000b1; 0.65</td><td align="left" rowspan="1" colspan="1">9.91 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">12.68 &#x000b1; 0.24</td><td align="left" rowspan="1" colspan="1">26.46 &#x000b1; 0.51</td><td align="left" rowspan="1" colspan="1">9.87 &#x000b1; 0.00</td></tr><tr><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">9.53 &#x000b1; 0.08</td><td align="left" rowspan="1" colspan="1">33.01 &#x000b1; 0.68</td><td align="left" rowspan="1" colspan="1">9.91 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">12.37 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">29.24 &#x000b1; 0.53</td><td align="left" rowspan="1" colspan="1">9.87 &#x000b1; 0.00</td></tr><tr><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">9.47 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">31.45 &#x000b1; 0.32</td><td align="left" rowspan="1" colspan="1">9.91 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">12.36 &#x000b1; 0.05</td><td align="left" rowspan="1" colspan="1">26.72 &#x000b1; 0.45</td><td align="left" rowspan="1" colspan="1">9.64 &#x000b1; 0.32</td></tr><tr><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">9.47 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">30.52 &#x000b1; 1.06</td><td align="left" rowspan="1" colspan="1">9.91 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">12.36 &#x000b1; 0.05</td><td align="left" rowspan="1" colspan="1">26.62 &#x000b1; 0.82</td><td align="left" rowspan="1" colspan="1">9.51 &#x000b1; 0.35</td></tr><tr><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">9.49 &#x000b1; 0.06</td><td align="left" rowspan="1" colspan="1">30.21 &#x000b1; 0.78</td><td align="left" rowspan="1" colspan="1">9.91 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">13.48 &#x000b1; 0.79</td><td align="left" rowspan="1" colspan="1">26.97 &#x000b1; 0.81</td><td align="left" rowspan="1" colspan="1">9.60 &#x000b1; 0.31</td></tr><tr><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">9.42 &#x000b1; 0.12</td><td align="left" rowspan="1" colspan="1">29.48 &#x000b1; 1.07</td><td align="left" rowspan="1" colspan="1">9.91 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">13.54 &#x000b1; 0.68</td><td align="left" rowspan="1" colspan="1">24.58 &#x000b1; 0.47</td><td align="left" rowspan="1" colspan="1">9.60 &#x000b1; 0.38</td></tr><tr><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">&#x02212;</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">9.28 &#x000b1; 0.21</td><td align="left" rowspan="1" colspan="1">31.42 &#x000b1; 1.37</td><td align="left" rowspan="1" colspan="1">9.91 &#x000b1; 0.00</td><td align="left" rowspan="1" colspan="1">13.61 &#x000b1; 0.48</td><td align="left" rowspan="1" colspan="1">25.36 &#x000b1; 0.83</td><td align="left" rowspan="1" colspan="1">9.78 &#x000b1; 0.28</td></tr><tr><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">+</td><td align="left" rowspan="1" colspan="1">9.25 &#x000b1; 0.14</td><td align="left" rowspan="1" colspan="1">29.57 &#x000b1; 0.82</td><td align="left" rowspan="1" colspan="1">9.86 &#x000b1; 0.15</td><td align="left" rowspan="1" colspan="1">13.45 &#x000b1; 0.50</td><td align="left" rowspan="1" colspan="1">23.92 &#x000b1; 0.70</td><td align="left" rowspan="1" colspan="1">9.42 &#x000b1; 0.47</td></tr></tbody></table><table-wrap-foot><fn><p>The testing and training sets are from different genomes, and features are present (+) or absent (&#x02212;) from the combination. Besides shown features, no other feature is used. The whole data-based training approach was used. After prediction, the classification errors were calculated for each subgroup.</p></fn></table-wrap-foot></table-wrap><p>When multiple features were combined, two of combinations yielded best results are shown on the last rows of <xref ref-type="table" rid="tbl4">Table 4</xref>. The small reduction in classification errors by the inclusion of GO-based functional similarity scores, the intergenic distance and the DNA motif is encouraging to us because it suggests that in this case operon prediction can work well even in the absence of these features. Although other DNA motifs can also be used, their contributions to error reduction seem to be genome-dependent (data not shown). Furthermore, we have confirmed that the TTTTT motif is significantly over-represented in both <italic>E.coli</italic> and <italic>B.subtilis</italic> genomes, using the formula discussed in the Supplementary Data.</p><p>(C) For generalization purpose, a combination of multiple features substantially improves the prediction accuracy in the U200 groups. In section (B) Linear classifiers give the most generalization ability, we have found that linear classifiers generalize well across genomes. To further understand the contribution of the features used to prediction accuracy, the classifier whose method is based on the maximization of the likelihood criterion using the logistic function (logistic function-based) was trained on various combinations of selected features using the whole data-based training approach. The trained logistic function-based classifier was then used to predict if an adjacent gene pair in another genome is an operon pair or not. The prediction results were divided into three groups, namely U40, U200 and O200, and the classification error was calculated for each group. <xref ref-type="table" rid="tbl5">Table 5</xref> shows a portion of the prediction results on both <italic>E.coli</italic> and <italic>B.subtilis</italic>. Our results indicate that the U200 groups have the best improvement in prediction accuracy when additional features were used. In the U200 groups, we see 12&#x02013;21% improvement when comparing the results from using all features against the results from using the intergenic distances alone, as shown in <xref ref-type="table" rid="tbl5">Table 5</xref>. For the two other groups, inclusion of other features yields very little reduction in prediction errors. Among all tested features, the GO-based functional similarity score accounts for 5&#x02013;7% of the 12&#x02013;21% improvement in prediction accuracy for the U200 groups, suggesting that inclusion of GO-based functional similarity scores is necessary. Comparing the list of features that we found useful in this section and above section, we found that both phylogenetic distances and length ratio, while they are critical for improving the prediction accuracy when the testing and training data are from the same genome, do not yield a similar level of improvement when the training and testing data are from different genomes. This suggests that these features are genome-specific. In addition, we did not find any individual feature that gives a large improvement in classification errors as found in the case of using training and testing data from the same genome. Rather, the analysis results suggest that the combination of all features give better results than using only one feature, as shown in <xref ref-type="table" rid="tbl5">Table 5</xref> (and data not shown). However, inclusion of other features to the last combination set of features shown in <xref ref-type="table" rid="tbl5">Table 5</xref> did not further improve the prediction accuracy (data not shown).</p></sec><sec><title>Prediction results</title><p>(A) Our classifiers have lower classification errors than previously published results. Based on results shown in the previous sections, we trained several classifiers using either the logistic function-based method or the decision tree-based method, and used the trained classifiers to predict if an adjacent gene pair is an operon or a boundary pair, for all gene pairs in <italic>E.coli</italic> and <italic>B.subtilis</italic>. Then we calculated the specificity, sensitivity and the accuracy of each trained classifier on the known datasets from these two genomes, and reported the results in <xref ref-type="table" rid="tbl6">Table 6</xref>. Because in many previous reports, the accuracy was computed as an average of specificity and sensitivity of the positive set (the set of operonic gene pairs), we also included this score in the &#x02018;Average&#x02019; column of <xref ref-type="table" rid="tbl6">Table 6</xref> for the ease of comparison. Our results show that when training a classifier using operon data from the same genome as the testing genome, the non-linear classifier using decision tree-based method gives the prediction accuracy at 90.2 and 93.7% in <italic>B.subtilis</italic> and <italic>E.coli</italic>, respectively, or 90.7 and 94.7% if the accuracy is calculated as the average of prediction sensitivity and specificity. Hence our prediction program performs substantially better than the best previously reported studies which gave prediction accuracy, when using training and testing data from the same genome, at 88% in <italic>B. subtilis</italic> to 91% in <italic>E.coli</italic> (<xref ref-type="bibr" rid="b2">2</xref>,<xref ref-type="bibr" rid="b8">8</xref>,<xref ref-type="bibr" rid="b15">15</xref>). It is worth noting that the only piece of experimental data that we used is GO-based functional annotation, whereas to achieve the 91% prediction accuracy in <italic>E.coli</italic>, other authors have used multiple sources of data that are either derived directly from experiments or indirectly through mapping of experimental data from other organisms. These data include protein complex, genes in the same pathway, and microarray data in the case of <italic>B.subtilis</italic>.</p><table-wrap id="tbl6" position="float"><label>Table 6</label><caption><p>Sensitivity, specificity, the average of sensitivity and specificity and accuracy of operon prediction</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="1" colspan="1">Train/Test</th><th colspan="3" align="left" rowspan="1">Boundary gene pairs</th><th rowspan="1" colspan="1"/><th colspan="3" align="left" rowspan="1">Operonic gene pairs</th><th align="left" rowspan="1" colspan="1">Accuracy (%)</th></tr><tr><th rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1">Genome</th><th align="left" rowspan="1" colspan="1">Sensitivity (%)</th><th align="left" rowspan="1" colspan="1">Specificity (%)</th><th align="left" rowspan="1" colspan="1">Average (%)</th><th align="left" rowspan="1" colspan="1">Sensitivity (%)</th><th align="left" rowspan="1" colspan="1">Specificity (%)</th><th align="left" rowspan="1" colspan="1">Average (%)</th><th rowspan="1" colspan="1"/></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">Same</td><td align="left" rowspan="1" colspan="1"><italic>E.coli</italic></td><td align="char" char="." rowspan="1" colspan="1">90.54</td><td align="char" char="." rowspan="1" colspan="1">93.95</td><td align="char" char="." rowspan="1" colspan="1">92.24</td><td align="char" char="." rowspan="1" colspan="1">95.90</td><td align="char" char="." rowspan="1" colspan="1">93.52</td><td align="char" char="." rowspan="1" colspan="1">94.71</td><td align="char" char="." rowspan="1" colspan="1">93.69</td></tr><tr><td align="left" rowspan="1" colspan="1">Genome</td><td align="left" rowspan="1" colspan="1"><italic>B.subtilis</italic></td><td align="char" char="." rowspan="1" colspan="1">89.55</td><td align="char" char="." rowspan="1" colspan="1">89.90</td><td align="char" char="." rowspan="1" colspan="1">89.72</td><td align="char" char="." rowspan="1" colspan="1">90.82</td><td align="char" char="." rowspan="1" colspan="1">90.50</td><td align="char" char="." rowspan="1" colspan="1">90.66</td><td align="char" char="." rowspan="1" colspan="1">90.22</td></tr><tr><td align="left" rowspan="1" colspan="1">Different</td><td align="left" rowspan="1" colspan="1"><italic>E.coli</italic></td><td align="char" char="." rowspan="1" colspan="1">81.09</td><td align="char" char="." rowspan="1" colspan="1">81.58</td><td align="char" char="." rowspan="1" colspan="1">81.33</td><td align="char" char="." rowspan="1" colspan="1">87.13</td><td align="char" char="." rowspan="1" colspan="1">86.76</td><td align="char" char="." rowspan="1" colspan="1">86.94</td><td align="char" char="." rowspan="1" colspan="1">84.63</td></tr><tr><td align="left" rowspan="1" colspan="1">Genomes</td><td align="left" rowspan="1" colspan="1"><italic>B.subtilis</italic></td><td align="char" char="." rowspan="1" colspan="1">81.03</td><td align="char" char="." rowspan="1" colspan="1">83.40</td><td align="char" char="." rowspan="1" colspan="1">82.22</td><td align="char" char="." rowspan="1" colspan="1">85.29</td><td align="char" char="." rowspan="1" colspan="1">83.14</td><td align="char" char="." rowspan="1" colspan="1">84.22</td><td align="char" char="." rowspan="1" colspan="1">83.26</td></tr></tbody></table><table-wrap-foot><fn><p>When the testing and training data are from the same genome, the decision tree-based classifier was used, whereas when the testing and training sets are from different genomes, the logistic function-based classifier was used.</p></fn></table-wrap-foot></table-wrap><p>If we do not use training data from the same genome as the target genome, our study suggests that the linear classifier using logistic function-based method is among methods that give the best prediction results. For example, we have achieved 84.6% prediction accuracy on <italic>E.coli</italic> when using known operons from <italic>B.subtilis</italic> as the training set; similarly we have achieved 83.2% prediction accuracy on <italic>B.subtilis</italic>, when the classifier is trained on <italic>E.coli</italic>. If the accuracy is calculated as the average of sensitivity and specificity of the positive set, these numbers are equivalent to 84.9s and 86.2% in <italic>B.subtilis</italic> and <italic>E.coli</italic>, respectively. These numbers compare favorably to the previously best programs, which only gave 64% prediction accuracy on <italic>B.subtilis</italic> when trained on <italic>E.coli</italic> (<xref ref-type="bibr" rid="b2">2</xref>).</p><p>To confirm that the final classifiers used in this step are not over-trained, we randomly split the <italic>E.coli</italic> known dataset into two groups, and then calculated the prediction accuracy for each group using the same classifier. After 100 trials, we found that using decision tree-based classifiers, the average difference between the classification error rates of the two groups is &#x0003c;0.57%, and the standard deviation of the differences is &#x0003c;3%. Using the logistic function-based classifiers, the average difference between the classification error rates of the two groups is &#x0003c;0.84%, and the standard deviation of the differences is &#x0003c;2.8%. Similar results were observed with the classifiers trained on the <italic>B.subtilis</italic> known dataset. The small average differences and standard deviations suggest that the optimum classifiers chosen are not over-trained.</p><p>(B) We have better accuracy in predicting operon boundaries. The ultimate goal of operon prediction is to define the boundaries of operons in a genome. From the RegulonDB database, we have collected 289 unique TUs that contain two or more genes, and 256 unique single-gene TUs in <italic>E.coli</italic>. In addition, there are additional 145 TUs that are partially overlapped with each other. Previous study reported 69% accuracy in predicting unique multi-gene TUs, and an overall of 79% accuracy in predicting unique TUs (containing both single and multi-gene) in <italic>E.coli</italic> (<xref ref-type="bibr" rid="b2">2</xref>). For these two measures, our program has achieved 80.6 and 92.2% prediction accuracy on the same dataset. In <italic>B.subtilis</italic>, our program has achieved 73% accuracy in predicting unique multi-gene TUs, and 88.2% accuracy in predicting all unique TUs.</p><p>Overall, we have predicted 2586 TUs (single-gene and multi-gene) in <italic>E.coli</italic> and 2540 TUs in <italic>B.subtilis</italic>. In <italic>E.coli</italic>, we predicted 1680 single-gene TUs, and 906 multi-gene operons. In <italic>B.subtilis</italic>, we predicted 1734 single-gene TUs and 806 multi-gene operons. The total number of <italic>E.coli</italic> TUs predicted by our program is similar to others such as 2381 TUs (<xref ref-type="bibr" rid="b3">3</xref>) and 2646-2796 TUs (<xref ref-type="bibr" rid="b19">19</xref>). However, the number of multi-gene operons was previously predicted to be 717-831(<xref ref-type="bibr" rid="b19">19</xref>) or 837 (<xref ref-type="bibr" rid="b15">15</xref>) in <italic>E.coli</italic>, but it is slightly higher (906) as predicted by our program, and the reason will be addressed in below section. The list of these operons is available at <ext-link ext-link-type="uri" xlink:href="http://csbl.bmb.uga.edu/~phd/"/>.</p><p>(C) Implications of our prediction results on the overlapped transcripts. The genes belonging to 145 overlapping TUs in <italic>E.coli</italic> are found to cluster in 57 regions of the <italic>E. coli</italic> chromosome, suggesting that an average of 2.54 TU can be transcribed from each of these DNA regions. When using the operon prediction program, each DNA region should be predicted to belong to at least one TU (or more), producing at least 57 predicted operons from these regions. Among the 145 overlapped TUs, we found that 32 are exactly matched to our predicted operons. By closely examining these matched overlapped-TUs, we found that 18 predicted operons were matched to the longest overlapped-transcripts, and 11 were matched to the shortest overlapped-transcripts among all possible transcripts, suggesting that our decision tree-based predictor tends to predict either the longest or the shortest forms when multiple transcripts containing the same gene are observed. Because our protocol tends to predict the longest form of the overlapped TUs, it is not surprising to find that the number of multi-gene operons in the <italic>E.coli</italic> genome predicted by our program is slightly higher than the previously published results, as noted above.</p><p>(D) Our results correlate well with gene expression data. Our prediction results can also be evaluated using the gene expression data. If a gene pair is correctly predicted to be an operon pair, its Pearson correlation coefficient should be high as this gene pair would be transcribed together in one mRNA. Using the microarray gene expression data obtained from 180 experiments in <italic>E.coli</italic> (<ext-link ext-link-type="uri" xlink:href="http://genome-www5.stanford.edu/"/> #35), we computed the distribution of the Pearson correlation coefficient of the set of operonic gene pairs and the set of boundary gene pairs, and then compared the results to the distribution of the Pearson correlation coefficient of the set of randomly chosen gene pairs. The results showed in <xref ref-type="fig" rid="fig1">Figure 1</xref> suggest that the distribution of the Pearson correlation coefficient of 1000 randomly chosen gene pairs broadly follows a normal distribution, whereas the distribution of the known operonic gene pairs is skewed to the right as expected because genes in the same operons are usually transcribed together. Interestingly, the distribution of the Pearson correlation coefficients of the known boundary pairs is also slightly skewed to the right, suggesting that although an adjacent gene pair is not from the same operon, their gene expression could still be slightly correlated. Our observation makes biological sense as the RNA polymerase machinery probably has better chance to continue transcribing the downstream adjacent gene after it has finished transcribing the upstream gene or operon. Furthermore, we observed that 50% of the operon pairs and 18% of the boundary pairs have the Pearson correlation coefficient of larger than or equal to 0.78, confirming that adjacent pairs belonging to the same operons are in general transcribed together. Similarly, we have computed the Pearson correlation coefficient of unknown pairs that are predicted to be operonic gene pairs or boundary gene pairs, and calculated the distribution of Pearson correlation coefficient of these sets of gene pairs. We found that the distribution of the Pearson correlation coefficient of the unknown pairs that are predicted to be operonic gene pairs are closely resemble that of known operonic gene pairs, and the distribution of the Pearson correlation coefficient of the unknown pairs predicted to be boundary pairs are closely resemble that of known boundary pairs. These results indicate that at the gene expression level, our prediction results of the unknown gene pairs are closely resemble the known gene pairs, suggesting that the classification errors calculated from the known gene pairs probably correspond well with the classification errors of the unknown gene pairs.</p><fig id="fig1" position="float"><label>Figure 1</label><caption><p>The distribution of Pearson correlation coefficients of <italic>E.coli</italic> gene pairs calculated from the gene expression data. The X axis indicates the Pearson correlation coefficients. The Y axis is the density function for each of the following five sets of gene pairs: the randomly chosen pairs (square), the known boundary pairs (diamond), the unknown pairs predicted to be boundary pairs (filled diamond), the known operonic pairs (circle) and the unknown pairs predicted to be operonic pairs (filled circle).</p></caption><graphic xlink:href="gkl1018f1"/></fig></sec></sec><sec sec-type="discussion"><title>DISCUSSION</title><p>In this study, we have reported a new operon prediction method that utilizes multiple sources of genomic information. To obtain the best possible results, we have tested a number of classification methods, and found that the decision tree-based classifier gives the best prediction performance when the classifier is trained using data from the same genome as the target genome, and a linear classifier using the logistic function to maximize the likelihood criterion is one of the top classifiers that gives the best prediction performance when the classifier is trained on a genome other than the target genome. By using experimentally verified data from two genomes and exploring different classification functions, we have gained new insights about what type of classification function is most effective for operon prediction under different conditions. We believe that this study has led to a better prediction program with better generalization ability. Compared to existing operon prediction programs, our program performs better in predicting operonic gene pairs as well as in recognizing operon boundary. We believe that the improvement in predicting operon boundaries is critical for the successful application of other genome analysis tools such as computational prediction (and experimental confirmation) of transcriptional factor binding sites or functional annotation of unknown genes.</p><p>Our study is the first to show the discerning power of the length ratio between an adjacent gene pair; and this feature is most valuable when the training and testing data are from the same genome. Very little improvement is gained when including this feature in a linear classifier, implicating that these scores are not compatible between <italic>E.coli</italic> and <italic>B.subtilis</italic>. This observation suggests that there may be differences in the activity of <italic>B.subtilis</italic> RNA polymerase and <italic>E.coli</italic> RNA polymerase. Although we were not able to find any experimental study that addressed this issue directly, we found a previous report suggesting that <italic>E.coli</italic> and <italic>B.subtilis</italic> RNA polymerases could exhibit differences at the level of catalysis and signal recognition (<xref ref-type="bibr" rid="b22">22</xref>). Further experiments are clearly needed to confirm or reject this hypothesis. In addition, our study also indicates that for the U200 and O200 groups, the distance of the phylogenetic profiles is a major contributor to the reduction in error rates in our prediction, confirming that in bacterium there is a pressure to keep genes working in the same biological process to be transcribed together.</p><p>The improvement in the operon prediction accuracy achieved in our study might be due to the following factors: (i) a larger dataset compared to previous similar studies, (ii) one new feature used and (iii) a new classification method. Certainly, our datasets are larger than most of the datasets used in the previous studies. For example, for the <italic>E.coli</italic> dataset, we obtained 289 operons with 707 operonic gene pairs. Previous works often used 237 operons, and the operonic gene pairs range from 641 to 807. For the <italic>B.subtilis</italic> data, previous studies used 100&#x02013;635 known operons with 582&#x02013;703 operonic gene pairs. However, in <xref ref-type="table" rid="tbl1">Table 1</xref>, we have shown that when training on all data, using the na&#x000ef;ve Bayesian network method and five features (the distances of the phylogenetic profiles, the intergenic distances, the frequency of the TTTTT motif and the GO-based functional similarity score), we only achieved 14 and 17% misclassification error rates on the <italic>E.coli</italic> and <italic>B.subtilis</italic> data, respectively. These results are not better than the previous results, suggesting that the larger datasets do not help in improving the prediction accuracy. However, when using the decision-tree based method and using the strategy of splitting the data to three subgroups based on the intergenic distances, we achieved 10 and 15% misclassification errors on the same datasets, respectively, suggesting that it is the decision-tree based method that helps to improve the prediction accuracy. Furthermore, in <xref ref-type="table" rid="tbl4">Table 4</xref>, we show that the length ratio feature alone gives the best prediction accuracy when using the decision-tree based method. Therefore, we believe that the improvement in the prediction accuracy is due to the use of the decision-tree based method and the new feature.</p><p>Based on our prediction results, we predicted 218 multi-gene transcripts that contain both hypothetical proteins and annotated genes, and another 35 operons containing only hypothetical proteins in <italic>E.coli</italic>. In <italic>B.subtilis</italic>, we predicted 172 transcripts that contain both hypothetical protein and genes with annotated functions, and 393 operons containing only hypothetical proteins. The list of these operons is available at <ext-link ext-link-type="uri" xlink:href="http://csbl.bmb.uga.edu/~phd/"/>. As shown in <xref ref-type="fig" rid="fig1">Figure 1</xref>, many of these unknown genes predicted to be in the same operons also have high Pearson correlation coefficient scores of their expression patterns, suggesting that they are possibly transcriptionally co-regulated. Although the high Pearson correlation coefficient score is an indication of co-transcription, further experiments are needed to confirm our prediction.</p><p>From the results of our study, it is apparent that for a genome with a large number of known operons such as <italic>B.subtilis</italic> or <italic>E.coli</italic> we can achieve 90 and 94% accuracy in predicting whether a gene pair belongs to the same operon. In theory, the results will correspond to a maximum of 81 and 88% accuracy in predicting the boundary of an operon in <italic>B.subtilis</italic> and <italic>E.coli,</italic> respectively, although we only achieved 73 and 81% in our study. When applying a trained classifier to another genome at the gene pair level, prediction accuracy drops at least 8&#x02013;10%, suggesting that the corresponding accuracy in predicting the operon boundary will be maximally at the level of 69&#x02013;72%. Similar approach to ours can be used to further improve the generalization of the classifiers if other large datasets are available. In fact, Okuda and colleagues have already begun their effort to collect all known operons in other genomes (<xref ref-type="bibr" rid="b23">23</xref>).</p></sec><sec sec-type="supplementary-material"><title>SUPPLEMENTARY DATA</title><p>Supplementary Data are available at NAR Online.</p>
<supplementary-material id="PMC_1" content-type="local-data">
<caption>
<title>[Supplementary Data]</title>
</caption>
<media mimetype="text" mime-subtype="html" xlink:href="nar_gkl1018_index.html"/>
<media xlink:role="associated-file" mimetype="application" mime-subtype="msword"
xlink:href="nar_gkl1018_nar-02098-s-2006-File001.doc"/>
</supplementary-material>
</sec></body><back><ack><p>The authors would like to thank Dr Hongwei Wu, Dr Fenglou Mao, Dr Xin Chen and other members of the Computational Systems Biology Laboratory for their helpful discussions. This work was supported in part by the National Science Foundation (NSF/DBI-0354771, NSF/ITR-IIS-0407204, NSF/DBI-0542119), and also by a &#x02018;Distinguished Scholar&#x02019; grant from the Georgia Cancer Coalition. Funding to pay the Open Access publication charges for this article was provided by the National Science Foundation (NSF/DBI-0354771).</p><p><italic>Conflict of interest statement.</italic> None declared.</p></ack><ref-list><title>REFERENCES</title><ref id="b1"><label>1</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Burton</surname><given-names>Z.F.</given-names></name><name><surname>Gross</surname><given-names>C.A.</given-names></name><name><surname>Watanabe</surname><given-names>K.K.</given-names></name><name><surname>Burgess</surname><given-names>R.R.</given-names></name></person-group><article-title>The operon that encodes the sigma subunit of RNA polymerase also encodes ribosomal protein S21 and DNA primase in <italic>E.coli</italic> K12</article-title><source>Cell</source><year>1983</year><volume>32</volume><fpage>335</fpage><lpage>349</lpage><pub-id pub-id-type="pmid">6186393</pub-id></element-citation></ref><ref id="b2"><label>2</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Romero</surname><given-names>P.R.</given-names></name><name><surname>Karp</surname><given-names>P.D.</given-names></name></person-group><article-title>Using functional and organizational information to improve genome-wide computational prediction of transcription units on pathway-genome databases</article-title><source>Bioinformatics</source><year>2004</year><volume>20</volume><fpage>709</fpage><lpage>717</lpage><pub-id pub-id-type="pmid">14751985</pub-id></element-citation></ref><ref id="b3"><label>3</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yada</surname><given-names>T.</given-names></name><name><surname>Nakao</surname><given-names>M.</given-names></name><name><surname>Totoki</surname><given-names>Y.</given-names></name><name><surname>Nakai</surname><given-names>K.</given-names></name></person-group><article-title>Modeling and predicting transcriptional units of <italic>Escherichia coli</italic> genes using hidden Markov models</article-title><source>Bioinformatics</source><year>1999</year><volume>15</volume><fpage>987</fpage><lpage>993</lpage><pub-id pub-id-type="pmid">10745988</pub-id></element-citation></ref><ref id="b4"><label>4</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Craven</surname><given-names>M.</given-names></name><name><surname>Page</surname><given-names>D.</given-names></name><name><surname>Shavlik</surname><given-names>J.</given-names></name><name><surname>Bockhorst</surname><given-names>J.</given-names></name><name><surname>Glasner</surname><given-names>J.</given-names></name></person-group><article-title>A probabilistic learning approach to whole-genome operon prediction</article-title><source>Proc. Int. Conf. Intell. Syst. Mol. Biol.</source><year>2000</year><volume>8</volume><fpage>116</fpage><lpage>127</lpage><pub-id pub-id-type="pmid">10977072</pub-id></element-citation></ref><ref id="b5"><label>5</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ermolaeva</surname><given-names>M.D.</given-names></name><name><surname>White</surname><given-names>O.</given-names></name><name><surname>Salzberg</surname><given-names>S.L.</given-names></name></person-group><article-title>Prediction of operons in microbial genomes</article-title><source>Nucleic Acids Res.</source><year>2001</year><volume>29</volume><fpage>1216</fpage><lpage>1221</lpage><pub-id pub-id-type="pmid">11222772</pub-id></element-citation></ref><ref id="b6"><label>6</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sabatti</surname><given-names>C.</given-names></name><name><surname>Rohlin</surname><given-names>L.</given-names></name><name><surname>Oh</surname><given-names>M.K.</given-names></name><name><surname>Liao</surname><given-names>J.C.</given-names></name></person-group><article-title>Co-expression pattern from DNA microarray experiments as a tool for operon prediction</article-title><source>Nucleic Acids Res.</source><year>2002</year><volume>30</volume><fpage>2886</fpage><lpage>2893</lpage><pub-id pub-id-type="pmid">12087173</pub-id></element-citation></ref><ref id="b7"><label>7</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bockhorst</surname><given-names>J.</given-names></name><name><surname>Craven</surname><given-names>M.</given-names></name><name><surname>Page</surname><given-names>D.</given-names></name><name><surname>Shavlik</surname><given-names>J.</given-names></name><name><surname>Glasner</surname><given-names>J.</given-names></name></person-group><article-title>A Bayesian network approach to operon prediction</article-title><source>Bioinformatics</source><year>2003</year><volume>19</volume><fpage>1227</fpage><lpage>1235</lpage><pub-id pub-id-type="pmid">12835266</pub-id></element-citation></ref><ref id="b8"><label>8</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>De Hoon</surname><given-names>M.J.</given-names></name><name><surname>Imoto</surname><given-names>S.</given-names></name><name><surname>Kobayashi</surname><given-names>K.</given-names></name><name><surname>Ogasawara</surname><given-names>N.</given-names></name><name><surname>Miyano</surname><given-names>S.</given-names></name></person-group><article-title>Predicting the operon structure of <italic>Bacillus subtilis</italic> using operon length, intergene distance, and gene expression information</article-title><source>Pac. Symp. Biocomput.</source><year>2004</year><fpage>276</fpage><lpage>287</lpage><pub-id pub-id-type="pmid">14992510</pub-id></element-citation></ref><ref id="b9"><label>9</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Westover</surname><given-names>B.P.</given-names></name><name><surname>Buhler</surname><given-names>J.D.</given-names></name><name><surname>Sonnenburg</surname><given-names>J.L.</given-names></name><name><surname>Gordon</surname><given-names>J.I.</given-names></name></person-group><article-title>Operon prediction without a training set</article-title><source>Bioinformatics</source><year>2005</year><volume>21</volume><fpage>880</fpage><lpage>888</lpage><pub-id pub-id-type="pmid">15539453</pub-id></element-citation></ref><ref id="b10"><label>10</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zheng</surname><given-names>Y.</given-names></name><name><surname>Szustakowski</surname><given-names>J.D.</given-names></name><name><surname>Fortnow</surname><given-names>L.</given-names></name><name><surname>Roberts</surname><given-names>R.J.</given-names></name><name><surname>Kasif</surname><given-names>S.</given-names></name></person-group><article-title>Computational identification of operons in microbial genomes</article-title><source>Genome Res.</source><year>2002</year><volume>12</volume><fpage>1221</fpage><lpage>1230</lpage><pub-id pub-id-type="pmid">12176930</pub-id></element-citation></ref><ref id="b11"><label>11</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chen</surname><given-names>X.</given-names></name><name><surname>Su</surname><given-names>Z.</given-names></name><name><surname>Dam</surname><given-names>P.</given-names></name><name><surname>Palenik</surname><given-names>B.</given-names></name><name><surname>Xu</surname><given-names>Y.</given-names></name><name><surname>Jiang</surname><given-names>T.</given-names></name></person-group><article-title>Operon prediction by comparative genomics: an application to the Synechococcus sp. WH8102 genome</article-title><source>Nucleic Acids Res.</source><year>2004</year><volume>32</volume><fpage>2147</fpage><lpage>2157</lpage><pub-id pub-id-type="pmid">15096577</pub-id></element-citation></ref><ref id="b12"><label>12</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Edwards</surname><given-names>M.T.</given-names></name><name><surname>Rison</surname><given-names>S.C.G.</given-names></name><name><surname>Stoker</surname><given-names>N.G.</given-names></name><name><surname>Wernisch</surname><given-names>L.</given-names></name></person-group><article-title>A universally applicable method of operon map prediction on minimally annotated genomes using conserved genomic context</article-title><source>Nucleic Acids Res.</source><year>2005</year><volume>33</volume><fpage>3253</fpage><lpage>3262</lpage><pub-id pub-id-type="pmid">15942028</pub-id></element-citation></ref><ref id="b13"><label>13</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chen</surname><given-names>X.</given-names></name><name><surname>Su</surname><given-names>Z.</given-names></name><name><surname>Xu</surname><given-names>Y.</given-names></name><name><surname>Jiang</surname><given-names>T.</given-names></name></person-group><article-title>Computational prediction of operons in Synechococcus sp. WH8102</article-title><source>Genome Inform. Ser. Workshop Genome Inform.</source><year>2004</year><volume>15</volume><fpage>211</fpage><lpage>222</lpage></element-citation></ref><ref id="b14"><label>14</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Price</surname><given-names>M.N.</given-names></name><name><surname>Huang</surname><given-names>K.H.</given-names></name><name><surname>Alm</surname><given-names>E.J.</given-names></name><name><surname>Arkin</surname><given-names>A.P.</given-names></name></person-group><article-title>A novel method for accurate operon predictions in all sequenced prokaryotes</article-title><source>Nucleic Acids Res.</source><year>2005</year><volume>33</volume><fpage>880</fpage><lpage>892</lpage><pub-id pub-id-type="pmid">15701760</pub-id></element-citation></ref><ref id="b15"><label>15</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>G.Q.</given-names></name><name><surname>Cao</surname><given-names>Z.W.</given-names></name><name><surname>Luo</surname><given-names>Q.M.</given-names></name><name><surname>Cai</surname><given-names>Y.D.</given-names></name><name><surname>Li</surname><given-names>Y.X.</given-names></name></person-group><article-title>Operon prediction based on SVM</article-title><source>Comput. Biol. Chem.</source><year>2006</year><volume>30</volume><fpage>233</fpage><lpage>240</lpage><pub-id pub-id-type="pmid">16716751</pub-id></element-citation></ref><ref id="b16"><label>16</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Moreno-Hagelsieb</surname><given-names>G.</given-names></name><name><surname>Collado-Vides</surname><given-names>J.</given-names></name></person-group><article-title>A powerful non-homology method for the prediction of operons in prokaryotes</article-title><source>Bioinformatics</source><year>2002</year><volume>18</volume><issue>Suppl. 1</issue><fpage>S329</fpage><lpage>S336</lpage><pub-id pub-id-type="pmid">12169563</pub-id></element-citation></ref><ref id="b17"><label>17</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Jacob</surname><given-names>E.</given-names></name><name><surname>Sasikumar</surname><given-names>R.</given-names></name><name><surname>Nair</surname><given-names>K.N.</given-names></name></person-group><article-title>A fuzzy guided genetic algorithm for operon prediction</article-title><source>Bioinformatics</source><year>2005</year><volume>21</volume><fpage>1403</fpage><lpage>1407</lpage><pub-id pub-id-type="pmid">15564303</pub-id></element-citation></ref><ref id="b18"><label>18</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Salgado</surname><given-names>H.</given-names></name><name><surname>Gama-Castro</surname><given-names>S.</given-names></name><name><surname>Martinez-Antonio</surname><given-names>A.</given-names></name><name><surname>Diaz-Peredo</surname><given-names>E.</given-names></name><name><surname>Sanchez-Solano</surname><given-names>F.</given-names></name><name><surname>Peralta-Gil</surname><given-names>M.</given-names></name><name><surname>Garcia-Alonso</surname><given-names>D.</given-names></name><name><surname>Jimenez-Jacinto</surname><given-names>V.</given-names></name><name><surname>Santos-Zavaleta</surname><given-names>A.</given-names></name><name><surname>Bonavides-Martinez</surname><given-names>C.</given-names></name><etal/></person-group><article-title>RegulonDB (version 4.0): transcriptional regulation, operon organization and growth conditions in <italic>Escherichia coli</italic> K-12</article-title><source>Nucleic Acids Res.</source><year>2004</year><volume>32</volume><fpage>D303</fpage><lpage>D306</lpage><pub-id pub-id-type="pmid">14681419</pub-id></element-citation></ref><ref id="b19"><label>19</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Salgado</surname><given-names>H.</given-names></name><name><surname>Moreno-Hagelsieb</surname><given-names>G.</given-names></name><name><surname>Smith</surname><given-names>T.F.</given-names></name><name><surname>Collado-Vides</surname><given-names>J.</given-names></name></person-group><article-title>Operons in <italic>Escherichia coli</italic>: genomic analyses and predictions</article-title><source>Proc. Natl Acad. Sci. USA</source><year>2000</year><volume>97</volume><fpage>6652</fpage><lpage>6657</lpage><pub-id pub-id-type="pmid">10823905</pub-id></element-citation></ref><ref id="b20"><label>20</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wu</surname><given-names>H.</given-names></name><name><surname>Su</surname><given-names>Z.</given-names></name><name><surname>Mao</surname><given-names>F.</given-names></name><name><surname>Olman</surname><given-names>V.</given-names></name><name><surname>Xu</surname><given-names>Y.</given-names></name></person-group><article-title>Prediction of functional modules based on comparative genome analysis and Gene Ontology application</article-title><source>Nucleic Acids Res.</source><year>2005</year><volume>33</volume><fpage>2822</fpage><lpage>2837</lpage><pub-id pub-id-type="pmid">15901854</pub-id></element-citation></ref><ref id="b21"><label>21</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pellegrini</surname><given-names>M.</given-names></name><name><surname>Marcotte</surname><given-names>E.M.</given-names></name><name><surname>Thompson</surname><given-names>M.J.</given-names></name><name><surname>Eisenberg</surname><given-names>D.</given-names></name><name><surname>Yeates</surname><given-names>T.O.</given-names></name></person-group><article-title>Assigning protein functions by comparative genome analysis: protein phylogenetic profiles</article-title><source>Proc. Natl Acad. Sci. USA</source><year>1999</year><volume>96</volume><fpage>4285</fpage><lpage>4288</lpage><pub-id pub-id-type="pmid">10200254</pub-id></element-citation></ref><ref id="b22"><label>22</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Artsimovitch</surname><given-names>I.</given-names></name><name><surname>Svetlov</surname><given-names>V.</given-names></name><name><surname>Anthony</surname><given-names>L.</given-names></name><name><surname>Burgess</surname><given-names>R.R.</given-names></name><name><surname>Landick,</surname><given-names>R.</given-names></name></person-group><article-title>RNA Polymerases from Bacillus subtilis and <italic>Escherichia coli</italic> Differ in Recognition of Regulatory Signals</article-title><source>In Vitro. J. Bacteriol.</source><year>2000</year><volume>182</volume><fpage>6027</fpage><lpage>6035</lpage></element-citation></ref><ref id="b23"><label>23</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Okuda</surname><given-names>S.</given-names></name><name><surname>Katayama</surname><given-names>T.</given-names></name><name><surname>Kawashima</surname><given-names>S.</given-names></name><name><surname>Goto</surname><given-names>S.</given-names></name><name><surname>Kanehisa</surname><given-names>M.</given-names></name></person-group><article-title>ODB: a database of operons accumulating known operons across multiple genomes</article-title><source>Nucleic Acids Res.</source><year>2006</year><volume>34</volume><fpage>D358</fpage><lpage>D362</lpage><pub-id pub-id-type="pmid">16381886</pub-id></element-citation></ref></ref-list></back></article>

<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.0 20120330//EN" "JATS-archivearticle1.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">Nucleic Acids Res</journal-id><journal-id journal-id-type="iso-abbrev">Nucleic Acids Res</journal-id><journal-id journal-id-type="pmc">nar</journal-id><journal-id journal-id-type="publisher-id">Nucleic Acids Research</journal-id><journal-title-group><journal-title>Nucleic Acids Research</journal-title></journal-title-group><issn pub-type="ppub">0305-1048</issn><issn pub-type="epub">1362-4962</issn><publisher><publisher-name>Oxford University Press</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">17170005</article-id><article-id pub-id-type="pmc">PMC1802560</article-id><article-id pub-id-type="doi">10.1093/nar/gkl1026</article-id><article-categories><subj-group subj-group-type="heading"><subject>Survey and Summary</subject></subj-group></article-categories><title-group><article-title>An evaluation of contemporary hidden Markov model genefinders with a predicted exon taxonomy</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Knapp</surname><given-names>Keith</given-names></name><xref ref-type="aff" rid="au1">1</xref><xref ref-type="corresp" rid="cor1">*</xref></contrib><contrib contrib-type="author"><name><surname>Chen</surname><given-names>Yi-Ping Phoebe</given-names></name><xref ref-type="aff" rid="au1">1</xref><xref ref-type="aff" rid="au2">2</xref><xref ref-type="corresp" rid="cor1">*</xref></contrib><aff id="au1"><sup>1</sup><institution>Faculty of Science and Technology, Deakin University</institution><addr-line>Australia</addr-line></aff><aff id="au2"><sup>2</sup><institution>Australia Research Council Centre in Bioinformatics</institution><addr-line>Australia</addr-line></aff></contrib-group><author-notes><corresp id="cor1"><sup>*</sup>To whom correspondence should be addressed. Tel: +61 3 92517684; Fax: +61 3 92517604; Email: <email>phoebe.chen@deakin.edu.au</email></corresp><fn id="fn1"><p><sup>*</sup>Correspondence may also be addressed to Keith Knapp. Tel: +61 3 52272606; Fax: +61 3 52272167; Email: <email>kdk@deakin.edu.au</email></p></fn></author-notes><pub-date pub-type="ppub"><month>1</month><year>2007</year></pub-date><pub-date pub-type="epub"><day>14</day><month>12</month><year>2006</year></pub-date><pub-date pub-type="pmc-release"><day>14</day><month>12</month><year>2006</year></pub-date><!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. --><volume>35</volume><issue>1</issue><fpage>317</fpage><lpage>324</lpage><history><date date-type="received"><day>21</day><month>9</month><year>2006</year></date><date date-type="rev-recd"><day>13</day><month>11</month><year>2006</year></date><date date-type="accepted"><day>13</day><month>11</month><year>2006</year></date></history><permissions><copyright-statement>&#x000a9; 2006 The Author(s)</copyright-statement><copyright-year>2006</copyright-year><license license-type="openaccess"><license-p><!--CREATIVE COMMONS-->This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/2.0/uk/">http://creativecommons.org/licenses/by-nc/2.0/uk/</ext-link>) which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p></license></permissions><abstract><p>We present an independent evaluation of six recent hidden Markov model (HMM) genefinders. Each was tested on the new dataset (FSH298), the results of which showed no dramatic improvement over the genefinders tested five years ago. In addition, we introduce a comprehensive taxonomy of predicted exons and classify each resulting exon accordingly. These results are useful in measuring (with finer granularity) the effects of changes in a genefinder. We present an analysis of these results and identify four patterns of inaccuracy common in all HMM-based results.</p></abstract></article-meta></front><body><sec><title>INTRODUCTION</title><p>Since the first genefinding algorithms such as TESTCODE (<xref ref-type="bibr" rid="b1">1</xref>) came onto the scene, their effectiveness have grown with nucleotide sensitivity and specificity now reported in the high 90% range (<xref ref-type="bibr" rid="b2">2</xref>,<xref ref-type="bibr" rid="b3">3</xref>). Despite such nucleotide level results, exon, gene and whole-genome level results still need improvement (<xref ref-type="bibr" rid="b4">4</xref>,<xref ref-type="bibr" rid="b5">5</xref>). Research presses on towards improving the capabilities of automated gene annotation on the exon and whole-gene levels. Common among putatively &#x02018;high&#x02019; performance genefinders is the implementation of hidden Markov model (HMM) variants. We present an analysis and review of how the contemporary HMM genefinders: Augustus, Genezilla, GenomeScan, GlimmerHMM, SNAP and Twinscan fared on a new dataset (FSH298). Building on this, we apply our novel and comprehensive taxonomy of predicted exons to the output of each program tested. The purpose of this is to identify patterns of inaccuracy common to all HMM genefinders. Subsequently each pattern of inaccuracy can then be addressed hopefully resulting in more accurate genefinders. As this paper specifically evaluates HMM genefinders, a brief review is first provided.</p></sec><sec><title>HIDDEN MARKOV MODELS</title><p>Genefinders are commonly divided into two categories either <italic>ab initio</italic> or homology based (<xref ref-type="bibr" rid="b6">6</xref>,<xref ref-type="bibr" rid="b7">7</xref>). As will be discussed, many genefinders are hybrids. Given a sequence of inputs and a set of classes, a HMM assigns a class to each individual input. In the case of genefinders, the inputs are DNA nucleotides and the classes assigned are content signals or other regions, such as exons, introns, Poly(A) tails and TATA boxes. HMMs can be quite effective and have been implemented in other areas such as speech and gesture recognition, DNA and protein homology searches, and genefinding systems (<xref ref-type="bibr" rid="b8">8</xref>&#x02013;<xref ref-type="bibr" rid="b10">10</xref>).</p><p>As a sequence passes through the HMM genefinder, a class is assigned to each input based on a particular probability associated with the current state. The model itself is a collection of states (each containing an output probability for each class) and the transitions between states, where each transition has a probability of happening. As each input progresses into the model, the focus of the model transitions from its current state to another state (each having a different set of output probabilities).</p><p>Multiple extensions of HMMs exist; two common ones are the Generalized HMM and the Pair HMM. In a standard HMM only one input is classified in a given state, afterwards the model must perform a state transition, and the next input is then classified. Generalized HMMs remove the constraint of only one classification per state, and allow multiple classifications (also known as emissions or observations) to occur. As its name suggests pair HMMs compare two nucleotides from separate sequences concurrently and at each state a pair of nucleotides is used in determining which probability is used when emitting a class.</p><p>An HMM is composed of five items, some already mentioned. (i) A set of <italic>N</italic> states, i.e. TATA box, exon, intron, etc. (ii) A set of M observations/classes. (iii) A state transition probability distribution <italic>A</italic> = {<italic>a<sub>ij</sub></italic>}. (iv) An observation symbol probability distribution in state <italic>j</italic>. (v) An initial state distribution &#x003c0; (<xref ref-type="bibr" rid="b11">11</xref>).</p><p>Associated with HMMs are three problems that must be solved. (i) Evaluation, the probability of a set of observations occurring given a particular HMM. Probabilities like this provide a score on how applicable the given model is to the sequence. The forward&#x02013;backward algorithm calculates this score (<xref ref-type="bibr" rid="b8">8</xref>). (ii) Decoding, determining the optimal order of hidden states to generate the observed sequence. Commonly employed to solve this is the Viterbi algorithm (<xref ref-type="bibr" rid="b12">12</xref>). (iii) Learning, estimating the probability of starting in a given state. No one particular algorithm solves this optimally, but multiple algorithms are used. For example Baum&#x02013;Welch and Expectation&#x02013;Maximization algorithms both have been employed to solve this problem (<xref ref-type="bibr" rid="b8">8</xref>).</p><p>Note that in the genefinding realm it is common practice to identify only four &#x02018;exons&#x02019; (single, initial, internal and terminal); all of which must exist between the start and stop codons. Classifications such as this are simplistic and inexact. It is simplistic in that only four out of twelve (<xref ref-type="bibr" rid="b5">5</xref>) possible exon types have ever been considered. It is inexact to define an exon simply as a DNA-coding sequence between two introns because exons also exist in untranslated regions (UTRs).</p><p>For genefinders to attain consistently high output this practice must end. Unfortunately bias inherent in the gene research focuses mainly on protein coding exons, and insufficient data exist for training genefinders to annotate non-coding exons (M. Zhang, unpublished data).</p></sec><sec sec-type="methods"><title>METHODS</title><p>Due to their pervasiveness in the genefinder market, HMM-based genefinders are the focus of this research. We test six genefinders: Augustus, Genezilla, GenomeScan, GlimmerHMM, SNAP and Twinscan. Two of these (Twinscan and GenomeScan) also employ homology by default for prediction.</p><p>Three criteria were used for considering a genefinder for this evaluation. The first and most obvious criteria is that the genefinder must be HMM based on or else an extension to the HMM concept. Additional selection factors were age and testability. We looked for genefinders made available since 2001 which had not been involved in a comparison project similar in nature.</p><p>Attempts were made to include Doublescan either version 1 (<xref ref-type="bibr" rid="b2">2</xref>) or version 2 beta (I. M. Meyer, unpublished data), but testing could not be completed. Version 1.0 (hosted, but no longer supported at <ext-link ext-link-type="uri" xlink:href="http://www.sanger.ac.uk/Software/analysis/doublescan/"/>) never returned any results. Beta version 2.0 (unpublished data, correspondence with Meyer) suffers from modular dependency issues and only functioned sporadically. TWAIN (<xref ref-type="bibr" rid="b13">13</xref>) was considered and then removed, as it already implements a version of GeneZilla and implements homology.</p></sec><sec><title>FSH298 DATASET</title><p>For the purposes of this test a new dataset, FSH298, was built (available as Supplementary Data at NAR online). The dataset was extracted based on three search criteria:</p><list list-type="bullet"><list-item><p>The sequence contained a complete CDS.</p></list-item><list-item><p>The sequence was from human DNA.</p></list-item><list-item><p>The sequence was published after July 2005.</p></list-item></list><p>The publishing date was ensured to be accurate by using the &#x02018;limit&#x02019; feature of Entrez Nucleotide at NCBI and selecting &#x02018;Publication Date&#x02019; from the appropriate drop-down menu.</p><p>This ensures that the programs were not trained on sequences in the FSH298 dataset. In addition to ensuring non-overlap of training and test data, we created this dataset to be both testable and heterogeneous than previous tests. It is testable in the sense that we have known CDS annotations, yet is wild in so much as extreme filtering methods were not applied. Unlike previous test sets (18 and 20) we purposefully did not search for or remove sequences with the following characteristics:</p><list list-type="bullet"><list-item><p>Non-canonical translation start and stop codons (ATG&#x02013;TAA, TAG, TGA).</p></list-item><list-item><p>Non-canonical intron boundaries (GT&#x02013;AG).</p></list-item><list-item><p>Protein coding frames not evenly divisible by three.</p></list-item></list><p>FSH298 has the following properties:</p><list list-type="bullet"><list-item><p>It consists of 37 genes with no introns in the open reading frame (commonly referred to as a &#x02018;single exon gene&#x02019;) and 261 multi-exon genes. The mean number of coding exons per gene is 8.57.</p></list-item><list-item><p>There are 2555 coding exons with a mean length of 171 bases. There are 2257 introns with a mean length of 3534 bases.</p></list-item><list-item><p>It consists of 10&#x02009;793&#x02009;400 nt over 298 sequences with a mean sequence length of 36&#x02009;219 bases.</p></list-item><list-item><p>Four percent of the dataset are CDS, 74% intronic (between coding exons only, not UTR introns), while 22% is neither protein coding nor intronic (thus intergenic, promoter, UTR, Poly(A), etc.).</p></list-item></list><p>Regarding alternative splicing only two sequences (DQ070893 and AF479645) in FSH298 had an alternative coding sequence. These alternatives were identified by the GenBank feature tag &#x02018;CDS&#x02019;. The statistics for these two sequences were calculated manually, selecting the alternative with the best match, and integrated with the non-alternative spliced statistics. It is possible that in the future additional CDS features may be annotated which are currently unknown.</p></sec><sec><title>TEST PROGRAMS</title><p>The following section provides a brief introduction to each program, its training set, output format and other relevant characteristics.</p><sec><title>Augustus</title><p>This program (<xref ref-type="bibr" rid="b14">14</xref>) is originally a generalized HMM for eukaryotes, and has since been expanded to model introns more accurately and to incorporate user-defined heuristics. The original training set used on Augustus was from GenBank of October 2002. It consisted of 1284 single gene sequences. Augustus output is in the GFF format scoring both strands of DNA and assigning a score to each predicted coding sequence. We tested all the sequences of the FSH298 dataset locally on Augustus v.1.5.</p></sec><sec><title>GeneZilla</title><p>Formerly known as Tigrscan, GeneZilla (<xref ref-type="bibr" rid="b15">15</xref>) implements a GHMM. GeneZilla is a mammoth system which capitalizes on the modularity of HMMs. As with all genefinders the author attempted to use training data provided by the developer. With the exception of four submodels: initial-exon, internal-exon, terminal-exon and single-exon, Genezilla was trained on human-models-refseq8000.tar.gz (available from <ext-link ext-link-type="uri" xlink:href="http://ftp.bioinformatics.org/pub/genezilla"/>). The four submodels were not included with the distribution and were derived from the developer recommended (W. H. Majoros, personal communication) Homo.sapiens.tar.gz dataset (available from <ext-link ext-link-type="uri" xlink:href="http://www.genefinding.org/datasets.html"/>). GeneZilla correctly ran on all 298 sequences.</p></sec><sec><title>GenomeScan</title><p>Building on the strengths of Genscan, we ran the GenomeScan (<xref ref-type="bibr" rid="b3">3</xref>) web server on all FSH298 sequences, and it completed successfully on 294. We ran a BLASTX query on the entire FSH298 dataset in the organism domain Rodentia to obtain homologous data to run in GenomeScan along with FSH298. We selected the highest scoring BLASTX result that was not classified as experimental. GenomeScan output was return by email, the contents of which were copied into text files for processing.</p></sec><sec><title>GlimmerHMM</title><p>GlimmerHMM v.2.1 (<xref ref-type="bibr" rid="b15">15</xref>) is a GHMM for identifying genes on eukaryotes. The dataset used for training GlimmerHMM was assembled in 2004 (M. Pertea, personal communication). Given the full test set GlimmerHMM predicted genes on all sequences. GlimmerHMM output is a proprietary format similar to GFF and was placed into a single text file for parsing and calculating statistics.</p></sec><sec><title>SNAP</title><p>SNAP's (version 2004-03-02) (<xref ref-type="bibr" rid="b16">16</xref>) original focus was to annotate genomes for which gene finder has not yet been fine-tuned. SNAP was first trained on <italic>Arabidopsis thaliana</italic> of the four datasets available from the developer's website (<ext-link ext-link-type="uri" xlink:href="http://homepage.mac.com/iankorf/"/>). SNAP was then retrained on human DNA. The dataset used was the 804 plus strand sequences from the Homo.sapiens.tar.gz dataset (available from <ext-link ext-link-type="uri" xlink:href="http://www.genefinding.org/datasets.html"/>); a subset of those used in partial retraining of GeneZilla. All sequences were tested locally, with a result returned for each sequence.</p></sec><sec><title>Twinscan</title><p>A pair of HMM, Twinscan (<xref ref-type="bibr" rid="b17">17</xref>) implements both second- and fifth-order homogenous Markov chains in gene finding along with mouse homology information. We successfully ran 295 sequences from FSH298 on the Twinscan webserver (available at <ext-link ext-link-type="uri" xlink:href="http://genes.cs.wustl.edu/twinscan"/>). Output of Twinscan was received by email in gtf formatted files.</p></sec><sec><title>Statistics</title><p>In order to calculate metrics useful for comparing each genefinder we first calculated the following four metrics:</p><list list-type="bullet"><list-item><p>True positive (TP), a nucleotide that is correctly annotated as coding.</p></list-item><list-item><p>True negative (TN), a nucleotide that is correctly annotated as a non-coding.</p></list-item><list-item><p>False positive (FP), a nucleotide incorrectly annotated as coding.</p></list-item><list-item><p>False negative (FN), a nucleotide incorrectly annotated as non-coding.</p></list-item></list><p>Once completed these serve as the basis for the next step, calculation of the following comparison measures.</p><p>Nucleotide specificity (NSp) is defined as the proportion of nucleotides that are truly coding:
<disp-formula><mml:math id="M1"><mml:mrow><mml:mtext>SP</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mtext>TP</mml:mtext></mml:mrow><mml:mrow><mml:mtext>TP</mml:mtext><mml:mo>+</mml:mo><mml:mtext>FP</mml:mtext></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula>
Nucleotide sensitivity (NSn) is defined as the proportion of annotated nucleotides that are correctly predicted as coding (<xref ref-type="bibr" rid="b2">2</xref>).
<disp-formula><mml:math id="M2"><mml:mrow><mml:mtext>Sn</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mtext>TP</mml:mtext></mml:mrow><mml:mrow><mml:mtext>TP</mml:mtext><mml:mo>+</mml:mo><mml:mtext>FP</mml:mtext></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula></p><p>Sensitivity shows a proportion in relation to reality, while specificity shows a proportion in relation to the prediction. Neither Sn nor Sp alone is a good indication of the prediction accuracy because if one has a high value the other may not. A good discussion of this is available in (<xref ref-type="bibr" rid="b18">18</xref>). To overcome this issue the following nucleotide measures calculate a value useful for comparisons:</p><list list-type="roman-lower"><list-item><p>Correlation coefficient (CC) displays a relationship between sensitivity and specificity, when both coding and non-coding regions exist in the training and test datasets.
<disp-formula><mml:math id="M3"><mml:mrow><mml:mtext>CC</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mtext>TP</mml:mtext><mml:mo>*</mml:mo><mml:mtext>TN</mml:mtext><mml:mo>&#x02212;</mml:mo><mml:mtext>FN</mml:mtext><mml:mo>*</mml:mo><mml:mtext>FP</mml:mtext></mml:mrow><mml:mrow><mml:msqrt><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtext>TP</mml:mtext><mml:mo>+</mml:mo><mml:mtext>FN</mml:mtext></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>*</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtext>TN</mml:mtext><mml:mo>+</mml:mo><mml:mtext>FP</mml:mtext></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>*</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtext>TP</mml:mtext><mml:mo>+</mml:mo><mml:mtext>FP</mml:mtext></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>*</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtext>TN</mml:mtext><mml:mo>+</mml:mo><mml:mtext>FN</mml:mtext></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msqrt></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula>
</p></list-item><list-item><p>Burset and Guig&#x000f3; (<xref ref-type="bibr" rid="b18">18</xref>) introduced the average correlation (AC), derived in part from the average conditional probability (ACP). AC partially resolves the CC deficiency of: a zero value occurring as a factor in the denominator causing a square root of zero calculation error.
<disp-formula><mml:math id="M4"><mml:mrow><mml:mtext>AC</mml:mtext><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtext>ACP</mml:mtext><mml:mo>&#x02212;</mml:mo><mml:mn>0.05</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>*</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></disp-formula>
<disp-formula><mml:math id="M5"><mml:mrow><mml:mtext>ACP</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>4</mml:mn></mml:mfrac><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mfrac><mml:mrow><mml:mtext>TP</mml:mtext></mml:mrow><mml:mrow><mml:mtext>TP</mml:mtext><mml:mo>+</mml:mo><mml:mtext>FN</mml:mtext></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mtext>TP</mml:mtext></mml:mrow><mml:mrow><mml:mtext>TP</mml:mtext><mml:mo>+</mml:mo><mml:mtext>FP</mml:mtext></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mtext>TN</mml:mtext></mml:mrow><mml:mrow><mml:mtext>TN</mml:mtext><mml:mo>+</mml:mo><mml:mtext>FN</mml:mtext></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mtext>TN</mml:mtext></mml:mrow><mml:mrow><mml:mtext>TN</mml:mtext><mml:mo>+</mml:mo><mml:mtext>FP</mml:mtext></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
</p></list-item></list><p>Unfortunately ACP has a minor, yet previously undocumented drawback. In situations where the test sequence consists of a single exon gene and the genefinder is 100% accurate, AC is unable to calculate and display such precision, as ACP requires the identification of non-coding nucleotides. Lack of non-coding nucleotides causes a division by zero error and the resultant inability to rate a genefinder's accuracy as perfect. Such deficiencies can be overcome by either ensuring that the test data have non-coding nucleotides (e.g. in flanking regions) or programmatically by testing for said conditions and implementing a proper work-around.</p><p>Regarding exon level accuracy specificity (ESp) is defined as the proportion of exons that are actually coding. Likewise, exon sensitivity (ESn) is the proportion of exons that are correctly predicted as coding
<disp-formula><mml:math id="M6"><mml:mrow><mml:mtext>ESp</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mtext>TE</mml:mtext></mml:mrow><mml:mrow><mml:mtext>PE</mml:mtext></mml:mrow></mml:mfrac><mml:mtext>&#x02003;</mml:mtext><mml:mtext>ESn</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mtext>TE</mml:mtext></mml:mrow><mml:mrow><mml:mtext>AE</mml:mtext></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula>
where TE (true exons) is the number of correctly predicted exons, AE (actual exons) is the number of annotated exons and PE (predicted exons) is the number of predicted exons (<xref ref-type="bibr" rid="b19">19</xref>).</p><p>Finally we calculated the mean average of ESn and ESp. This average places equal weight on both measurements, but consolidates them into a single numerical metric, which has become a <italic>de facto</italic> standard for measuring exon level accuracy.</p></sec></sec><sec sec-type="results"><title>RESULTS</title><p>In obtaining the results of the study we prepared a new dataset FSH298, this consists of genetic sequences added to GenBank after the publication of the training data of the six genefinders in this study. We calculated two sets of results. The first was the traditional measurements for estimating the effectiveness of genefinders (discussed above). These results are in <xref ref-type="table" rid="tbl1">Table 1</xref>. The second is the predicted exon taxonomy (PET) described later.</p><table-wrap id="tbl1" position="float"><label>Table 1</label><caption><p>Performance of six Genefinders on the FSH298 dataset</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="1" colspan="1"/><th colspan="5" align="left" rowspan="1">Nucleotide</th><th colspan="8" align="left" rowspan="1">Exon</th></tr><tr><th rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1">No genes</th><th align="left" rowspan="1" colspan="1">SN</th><th align="left" rowspan="1" colspan="1">SP</th><th align="left" rowspan="1" colspan="1">AC</th><th align="left" rowspan="1" colspan="1">CC</th><th align="left" rowspan="1" colspan="1">CR</th><th align="left" rowspan="1" colspan="1">PC</th><th align="left" rowspan="1" colspan="1">OL</th><th align="left" rowspan="1" colspan="1">ME</th><th align="left" rowspan="1" colspan="1">WE</th><th align="left" rowspan="1" colspan="1">SNE</th><th align="left" rowspan="1" colspan="1">SPE</th><th align="left" rowspan="1" colspan="1">AVG</th></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">Twinscan</td><td align="left" rowspan="1" colspan="1">7</td><td align="char" char="." rowspan="1" colspan="1">0.90</td><td align="char" char="." rowspan="1" colspan="1">0.95</td><td align="char" char="." rowspan="1" colspan="1">0.89</td><td align="char" char="." rowspan="1" colspan="1">0.88</td><td align="char" char="." rowspan="1" colspan="1">0.50</td><td align="char" char="." rowspan="1" colspan="1">0.34</td><td align="char" char="." rowspan="1" colspan="1">0.07</td><td align="char" char="." rowspan="1" colspan="1">0.12</td><td align="char" char="." rowspan="1" colspan="1">0.07</td><td align="char" char="." rowspan="1" colspan="1">0.59</td><td align="char" char="." rowspan="1" colspan="1">0.51</td><td align="char" char="." rowspan="1" colspan="1">0.55</td></tr><tr><td align="left" rowspan="1" colspan="1">GenomeScan</td><td align="left" rowspan="1" colspan="1">43</td><td align="char" char="." rowspan="1" colspan="1">0.88</td><td align="char" char="." rowspan="1" colspan="1">0.83</td><td align="char" char="." rowspan="1" colspan="1">0.72</td><td align="char" char="." rowspan="1" colspan="1">0.81</td><td align="char" char="." rowspan="1" colspan="1">0.63</td><td align="char" char="." rowspan="1" colspan="1">0.07</td><td align="char" char="." rowspan="1" colspan="1">0.01</td><td align="char" char="." rowspan="1" colspan="1">0.26</td><td align="char" char="." rowspan="1" colspan="1">0.14</td><td align="char" char="." rowspan="1" colspan="1">0.76</td><td align="char" char="." rowspan="1" colspan="1">0.74</td><td align="char" char="." rowspan="1" colspan="1">0.75</td></tr><tr><td align="left" rowspan="1" colspan="1">GlimmerHMM</td><td align="left" rowspan="1" colspan="1">9</td><td align="char" char="." rowspan="1" colspan="1">0.89</td><td align="char" char="." rowspan="1" colspan="1">0.79</td><td align="char" char="." rowspan="1" colspan="1">0.80</td><td align="char" char="." rowspan="1" colspan="1">0.80</td><td align="char" char="." rowspan="1" colspan="1">0.61</td><td align="char" char="." rowspan="1" colspan="1">0.13</td><td align="char" char="." rowspan="1" colspan="1">0.03</td><td align="char" char="." rowspan="1" colspan="1">0.14</td><td align="char" char="." rowspan="1" colspan="1">0.21</td><td align="char" char="." rowspan="1" colspan="1">0.69</td><td align="char" char="." rowspan="1" colspan="1">0.63</td><td align="char" char="." rowspan="1" colspan="1">0.66</td></tr><tr><td align="left" rowspan="1" colspan="1">Augustus</td><td align="left" rowspan="1" colspan="1">0</td><td align="char" char="." rowspan="1" colspan="1">0.81</td><td align="char" char="." rowspan="1" colspan="1">0.78</td><td align="char" char="." rowspan="1" colspan="1">0.78</td><td align="char" char="." rowspan="1" colspan="1">0.76</td><td align="char" char="." rowspan="1" colspan="1">0.63</td><td align="char" char="." rowspan="1" colspan="1">0.12</td><td align="char" char="." rowspan="1" colspan="1">0.01</td><td align="char" char="." rowspan="1" colspan="1">0.15</td><td align="char" char="." rowspan="1" colspan="1">0.17</td><td align="char" char="." rowspan="1" colspan="1">0.64</td><td align="char" char="." rowspan="1" colspan="1">0.63</td><td align="char" char="." rowspan="1" colspan="1">0.64</td></tr><tr><td align="left" rowspan="1" colspan="1">GeneZilla</td><td align="left" rowspan="1" colspan="1">0</td><td align="char" char="." rowspan="1" colspan="1">0.70</td><td align="char" char="." rowspan="1" colspan="1">0.67</td><td align="char" char="." rowspan="1" colspan="1">0.67</td><td align="char" char="." rowspan="1" colspan="1">0.65</td><td align="char" char="." rowspan="1" colspan="1">0.40</td><td align="char" char="." rowspan="1" colspan="1">0.16</td><td align="char" char="." rowspan="1" colspan="1">0.05</td><td align="char" char="." rowspan="1" colspan="1">0.17</td><td align="char" char="." rowspan="1" colspan="1">0.31</td><td align="char" char="." rowspan="1" colspan="1">0.47</td><td align="char" char="." rowspan="1" colspan="1">0.40</td><td align="char" char="." rowspan="1" colspan="1">0.44</td></tr><tr><td align="left" rowspan="1" colspan="1">SNAP (<italic>H.sap</italic>)</td><td align="left" rowspan="1" colspan="1">9</td><td align="char" char="." rowspan="1" colspan="1">0.72</td><td align="char" char="." rowspan="1" colspan="1">0.71</td><td align="char" char="." rowspan="1" colspan="1">0.69</td><td align="char" char="." rowspan="1" colspan="1">0.66</td><td align="char" char="." rowspan="1" colspan="1">0.35</td><td align="char" char="." rowspan="1" colspan="1">0.20</td><td align="char" char="." rowspan="1" colspan="1">0.08</td><td align="char" char="." rowspan="1" colspan="1">0.31</td><td align="char" char="." rowspan="1" colspan="1">0.34</td><td align="char" char="." rowspan="1" colspan="1">0.40</td><td align="char" char="." rowspan="1" colspan="1">0.36</td><td align="char" char="." rowspan="1" colspan="1">0.38</td></tr><tr><td align="left" rowspan="1" colspan="1">SNAP (<italic>A.thal</italic>)</td><td align="left" rowspan="1" colspan="1">7</td><td align="char" char="." rowspan="1" colspan="1">0.47</td><td align="char" char="." rowspan="1" colspan="1">0.22</td><td align="char" char="." rowspan="1" colspan="1">0.22</td><td align="char" char="." rowspan="1" colspan="1">0.19</td><td align="char" char="." rowspan="1" colspan="1">0.04</td><td align="char" char="." rowspan="1" colspan="1">0.10</td><td align="char" char="." rowspan="1" colspan="1">0.09</td><td align="char" char="." rowspan="1" colspan="1">0.52</td><td align="char" char="." rowspan="1" colspan="1">0.76</td><td align="char" char="." rowspan="1" colspan="1">0.11</td><td align="char" char="." rowspan="1" colspan="1">0.04</td><td align="char" char="." rowspan="1" colspan="1">0.08</td></tr></tbody></table><table-wrap-foot><fn><p>The metrics provided are for the whole genome, the nucleotide and the exon level. At the whole genome (No genes) is the number of sequences where no gene was predicted. At the nucleotide level sensitivity (SN), specificity (SP), approximate correlation (AC) and the correlation coefficient (CC) are displayed. On the exon level correct exons (CR), partially correct (PC), overlapping exons (OL), missed exons (ME), wrong exons (WE), exon sensitivity (SNE) exon specificity (SPE), and the mean average (AVG) of SNE and SPE. All genefinders successfully completed each of the 298 sequences except Twinscan and GenomeScan which completed 295 and 294, respectively. SNAP was trained on two organisms, <italic>A.thaliana</italic> (<italic>A.thal</italic>) and <italic>H.sapiens</italic> (<italic>H.sap</italic>).</p></fn></table-wrap-foot></table-wrap><p>All sequences were attempted on each genefinder; however, in the cases of GenomeScan and Twinscan, four and three sequences failed to complete on each genefinder, respectively. Sequence length caused the failure in Twinscan. GenomeScan however never completed one sequence, despite multiple attempts, and repeatedly returned a stack execution error for three additional sequences. Furthermore, these were the only two which were run via a web interface; all other programs were run locally.</p><p>For the purposes of GenomeScan each sequence in FSH298 was BLASTX'ed (<xref ref-type="bibr" rid="b20">20</xref>) employing the organism subset Rodentia for comparison. The same organism was used in the BLASTN search to find homologs as input for Twinscan.</p><p>In order to confirm correct annotation only results from the positive strands were considered. If multiple genes were predicted on a single sequence, all predicted exons were treated as part of one gene.</p><sec><title>Predicted exon taxonomy statistics</title><p>The second set of results obtained was the classification of each exon predicted as coding and determining the resulting trends as presented in the following section. No genefinder evaluations has until now presented such a comprehensive taxonomy of all possible exon classifications. Burset and Guig&#x000f3; (<xref ref-type="bibr" rid="b18">18</xref>) measured &#x02018;Missed Exons&#x02019; and &#x02018;Wrong Exons&#x02019;. Rogic, Mackworth and Ouellette (<xref ref-type="bibr" rid="b19">19</xref>) extended this with &#x02018;Partially Correct&#x02019; and &#x02018;Overlapping exons&#x02019;.</p><p>Each exon predicted was classified into one out of thirteen categories, and further identified by each genefinder as initial, internal, terminal or single. These are illustrated in <xref ref-type="fig" rid="fig1">Figures 1</xref>&#x02013;<xref ref-type="fig" rid="fig4">4</xref>. Class 1 exons are correct on both boundaries (<xref ref-type="fig" rid="fig1">Figure 1</xref>). Classes 2&#x02013;9 cover every possible type of overlap. Rogic <italic>et al</italic>. (<xref ref-type="bibr" rid="b19">19</xref>) separate these into two categories, partially correct and overlapping. The former have one boundary correct (<xref ref-type="fig" rid="fig2">Figure 2</xref>), and include classes 2, 7, 8 and 9.</p><fig id="fig1" position="float"><label>Figure 1</label><caption><p>Class 1 exons. Match exactly at both boundaries.</p></caption><graphic xlink:href="gkl1026f1"/></fig><fig id="fig2" position="float"><label>Figure 2</label><caption><p>Partially correct. Classes 3&#x02013;6 match only one boundary.</p></caption><graphic xlink:href="gkl1026f2"/></fig><fig id="fig3" position="float"><label>Figure 3</label><caption><p>Overlapping exons. No boundaries match but the exons do overlap true annotated exons for classes 2, 7, 8 and 9.</p></caption><graphic xlink:href="gkl1026f3"/></fig><fig id="fig4" position="float"><label>Figure 4</label><caption><p>Wrong exons. Classes 10 and 11 reverse a boundary. Classes 12 and 13 neither match a boundary nor overlap an annotated exon.</p></caption><graphic xlink:href="gkl1026f4"/></fig><p>The latter (<xref ref-type="fig" rid="fig3">Figure 3</xref>) match no boundaries, and are composed of classes 3&#x02013;6. Exons of classes 10 and 11 either end on an annotated 5&#x02032; boundary or start on a known 3&#x02032; boundary (<xref ref-type="fig" rid="fig4">Figure 4</xref>). These should never occur, however if an exon of this type occurs, it may well warrant further investigation. Classes 12 and 13 are both wrong exons, neither touching nor overlapping any annotated boundary. Their class is solely determined by their distance in bases to the nearest actual exon boundary (upstream or downstream).</p><p>The name PET is especially correct as genefinders should identify all exons (whether non-, partially- or fully-coding). The PET is applicable to all predicted exons, not just the coding ones.</p><p>Such a formal taxonomy of predicted exons (as the one presented) is necessary for multiple reasons. The first is to identify patterns of incorrect exon identification common to all HMM-based genefinders. By using the class and the feature (initial, internal, terminal or single exons) we can identify patterns at the finest level possible. Thus new genefinders can be engineered to resolve such issues.</p><p>The second reason is to see the direct result of changes to a particular genefinder. Generation of PET statistics clearly show which classes a genefinder tends to predict most.</p><p>In order to classify a predicted exon, a reference exon must first be found. These are found by comparing the predicted exon to every annotated exon for the sequence in question. An annotated exon is a candidate to be a reference exon if any bases overlap the predicted exon. The annotated exon with the largest number of overlapping bases is then selected as the reference exon. If no annotated exons overlap the predicted exon, then the exon closest physically is the reference exon. The predicted exon is classified based on its 5&#x02032; and 3&#x02032; boundaries in relation to the selected reference exon.</p><p>Twinscan in addition to identifying exons annotates &#x02018;start_codons&#x02019; and &#x02018;stop_codons&#x02019; as separate entries in its output. Each of these was classified together with its respective preceding or succeeding coding sequence; failure to do so would make comparison practically impossible. GeneZilla likewise adds the additional genetic feature Poly(A) tail among its output; these were discarded as they are not included as part of the CDS annotations in GenBank.</p></sec></sec><sec sec-type="discussion"><title>DISCUSSION</title><p>The traditional genefinder measurement statistics are presented in <xref ref-type="table" rid="tbl1">Table 1</xref>. Focusing first at the exon level, GenomeScan seems the decisively best performing program with an average sensitivity and specificity of 0.75. Issac and Raghava confirmed this result in (<xref ref-type="bibr" rid="b21">21</xref>) where GenomeScan fared similarly with an average of 0.74. GlimmerHMM and Augustus converge on a similar performance level of 0.65. A step lower is Twinscan's exon average at 0.55. Finally Genezilla and SNAP (<italic>Homo sapiens</italic>) return an exon level average of 0.44 and 0.38, respectively.</p><p>At the nucleotide level Twinscan outperformed all the others with 0.88 and 0.89 for AC and CC, respectively. Twinscan's sensitivity and specificity measured 0.90 and 0.95, respectively. GlimmerHMM, GenomeScan and Augustus all returned AC and CC varying between 0.70 and 0.80. Finally SNAP outperformed Genezilla, yet both had an AC and CC value ranging from 0.65 to 0.69.</p><p>It is tempting to state that GenomeScan is the best performing genefinder overall; however, at the whole gene level it rated poorest, not finding 43 genes in the 294 (15%) sequences it successfully completed. Statistically this is worse than any other genefinder in previous independent evaluations (<xref ref-type="bibr" rid="b18">18</xref>,<xref ref-type="bibr" rid="b20">20</xref>). Previously Genie (<xref ref-type="bibr" rid="b22">22</xref>) and MZEF (<xref ref-type="bibr" rid="b23">23</xref>) were the worst performers not finding a gene in 7% of sequences tested. Genezilla and Augustus performed best in this area identifying a coding region in every sequence tested.</p><p>It is no surprise that the two lowest performing genefinders were those requiring partial or complete training, especially considering the overall lack of documentation and support in the genefinding software development world. Training for SNAP is mostly automated. Genezilla's complex training regimen however has a larger opportunity for human error. SNAP was designed to perform initial genefinding on sequences for which no organism-specific genefinder exists; furthermore, its state model is not designed specifically for higher eukaryotes. Genezilla, however, is a massive system implementing multiple specific sub-model types over a robust state structure.</p><p>A second explanation for the results of Genezilla and SNAP exists. Each genefinder returned similar results when trained on essentially the same dataset. Therefore, it is possible that the training dataset are responsible for their lower results.</p><p>Comparing our results to that of Rogic <italic>et al</italic>. (<xref ref-type="bibr" rid="b19">19</xref>), there does not seem to be a vast improvement in the genefinders tested. AC varied in (<xref ref-type="bibr" rid="b19">19</xref>) from 0.68 to 0.91. The six programs we tested produced an AC ranging from 0.67 to 0.88. The mean of exon specificity and sensitivity ranged from 0.43 to 0.76 in Rogic's tests, while most of the genefinders in this evaluation ranged from 0.44 to 0.75. Given these results and those at the whole-gene level discussed above, why have genefinders remained stagnant in their performance especially when they have individually published higher results? Have HMM genefinders reached their quantum limits? How can future HMM genefinder development proceed to be more effective in the future?</p><p>In order to answer these questions we have developed the PET. We submit that every predicted coding sequence must be placed into one of the 13 possible classes, and the patterns (or ratios) between classes considered in future genefinder development. Similar to the habit of identifying only four classes of coding regions, any classification of predicted exons that is not comprehensive provides inadequate information for properly ascertaining genefinder performance.</p><p>Future techniques must now focus on resolving these patterns of inaccuracy inherent in all HMM-based genefinders. Use of the PET and measuring the ratios between predicted exon classes will allow researchers to directly measure the effects of new genefinders.</p></sec><sec><title>FEATURE</title><p>Every sequence is classified by its genefinder as a particular feature, being initial, internal, terminal or single. <xref ref-type="table" rid="tbl2">Table 2</xref> displays the average distribution of exons for all six genefinders. The top row of the table shows the actual distribution of exons. It can be seen that the genefinders achieve a high level of accuracy at 74% for internal exons, while the actual percentage of internal exons is 78%. For the remaining exon feature types each gene finder was within two percentage points of correctly identifying the appropriate number of exons. It is tempting to use this as an indicator of exon level performance; however, one must be careful because in some instances a genefinder will have predicted multiple start/stop exons on the same strand, while in others it has predicted no start/stop exons.</p><table-wrap id="tbl2" position="float"><label>Table 2</label><caption><p>Distribution of predicted exons by feature</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1">Initial</th><th align="left" rowspan="1" colspan="1">Internal</th><th align="left" rowspan="1" colspan="1">Term</th><th align="left" rowspan="1" colspan="1">Single</th></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">Actual exon distribution</td><td align="char" char="." rowspan="1" colspan="1">0.10</td><td align="char" char="." rowspan="1" colspan="1">0.78</td><td align="char" char="." rowspan="1" colspan="1">0.10</td><td align="char" char="." rowspan="1" colspan="1">0.01</td></tr><tr><td align="left" rowspan="1" colspan="1">Mean for all genefinders</td><td align="char" char="." rowspan="1" colspan="1">0.12</td><td align="char" char="." rowspan="1" colspan="1">0.72</td><td align="char" char="." rowspan="1" colspan="1">0.12</td><td align="char" char="." rowspan="1" colspan="1">0.02</td></tr><tr><td align="left" rowspan="1" colspan="1">Augustus</td><td align="char" char="." rowspan="1" colspan="1">0.11</td><td align="char" char="." rowspan="1" colspan="1">0.73</td><td align="char" char="." rowspan="1" colspan="1">0.13</td><td align="char" char="." rowspan="1" colspan="1">0.03</td></tr><tr><td align="left" rowspan="1" colspan="1">Genezilla</td><td align="char" char="." rowspan="1" colspan="1">0.11</td><td align="char" char="." rowspan="1" colspan="1">0.77</td><td align="char" char="." rowspan="1" colspan="1">0.11</td><td align="char" char="." rowspan="1" colspan="1">0.01</td></tr><tr><td align="left" rowspan="1" colspan="1">GenomeScan</td><td align="char" char="." rowspan="1" colspan="1">0.11</td><td align="char" char="." rowspan="1" colspan="1">0.76</td><td align="char" char="." rowspan="1" colspan="1">0.11</td><td align="char" char="." rowspan="1" colspan="1">0.02</td></tr><tr><td align="left" rowspan="1" colspan="1">GlimmerHMM</td><td align="char" char="." rowspan="1" colspan="1">0.12</td><td align="char" char="." rowspan="1" colspan="1">0.73</td><td align="char" char="." rowspan="1" colspan="1">0.13</td><td align="char" char="." rowspan="1" colspan="1">0.02</td></tr><tr><td align="left" rowspan="1" colspan="1">Twinscan</td><td align="char" char="." rowspan="1" colspan="1">0.08</td><td align="char" char="." rowspan="1" colspan="1">0.70</td><td align="char" char="." rowspan="1" colspan="1">0.05</td><td align="char" char="." rowspan="1" colspan="1">0.01</td></tr><tr><td align="left" rowspan="1" colspan="1">SNAP (<italic>H.sapiens</italic>)</td><td align="char" char="." rowspan="1" colspan="1">0.20</td><td align="char" char="." rowspan="1" colspan="1">0.60</td><td align="char" char="." rowspan="1" colspan="1">0.17</td><td align="char" char="." rowspan="1" colspan="1">0.03</td></tr></tbody></table><table-wrap-foot><fn><p>For each program the percentage of exons predicted as a particular feature is displayed. Term is an abbreviation for Terminal.</p></fn></table-wrap-foot></table-wrap><sec><title>Predicted exon taxonomy</title><p>Looking at the results in <xref ref-type="table" rid="tbl3">Table 3</xref>, overall the genefinders found more class 1 exons, correct exons, than any other class. Eighty-two percent of the exons Twinscan found were class 1, while only 36% of SNAPs were class 1. On the average 63% of the exons predicted were correct; meaning that in general automated genefinders are right almost two-thirds of the time at the exon level. Agreeing with the EAVG results from <xref ref-type="table" rid="tbl1">Table 1</xref>, this makes the genefinders GlimmerHMM and Augustus average and GenomeScan above average.</p><table-wrap id="tbl3" position="float"><label>Table 3</label><caption><p>PET distribution</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="1" colspan="1">Class</th><th align="left" rowspan="1" colspan="1">Augustus (%)</th><th align="left" rowspan="1" colspan="1">GeneZilla (%)</th><th align="left" rowspan="1" colspan="1">GenomeScan (%)</th><th align="left" rowspan="1" colspan="1">GlimmerHMM (%)</th><th align="left" rowspan="1" colspan="1">Twinscan (%)</th><th align="left" rowspan="1" colspan="1">SNAP (%)</th><th align="left" rowspan="1" colspan="1">Avg (%)</th></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">1</td><td align="char" char="." rowspan="1" colspan="1">72.19</td><td align="char" char="." rowspan="1" colspan="1">49.00</td><td align="char" char="." rowspan="1" colspan="1">73.28</td><td align="char" char="." rowspan="1" colspan="1">65.33</td><td align="char" char="." rowspan="1" colspan="1">82.42</td><td align="char" char="." rowspan="1" colspan="1">36.08</td><td align="char" char="." rowspan="1" colspan="1">63.05</td></tr><tr><td align="left" rowspan="1" colspan="1">13</td><td align="char" char="." rowspan="1" colspan="1">11.54</td><td align="char" char="." rowspan="1" colspan="1">31.67</td><td align="char" char="." rowspan="1" colspan="1">14.41</td><td align="char" char="." rowspan="1" colspan="1">18.09</td><td align="char" char="." rowspan="1" colspan="1">4.73</td><td align="char" char="." rowspan="1" colspan="1">32.75</td><td align="char" char="." rowspan="1" colspan="1">18.86</td></tr><tr><td align="left" rowspan="1" colspan="1">12</td><td align="char" char="." rowspan="1" colspan="1">5.24</td><td align="char" char="." rowspan="1" colspan="1">5.15</td><td align="char" char="." rowspan="1" colspan="1">4.31</td><td align="char" char="." rowspan="1" colspan="1">5.74</td><td align="char" char="." rowspan="1" colspan="1">1.37</td><td align="char" char="." rowspan="1" colspan="1">9.63</td><td align="char" char="." rowspan="1" colspan="1">5.24</td></tr><tr><td align="left" rowspan="1" colspan="1">5</td><td align="char" char="." rowspan="1" colspan="1">2.49</td><td align="char" char="." rowspan="1" colspan="1">5.15</td><td align="char" char="." rowspan="1" colspan="1">1.73</td><td align="char" char="." rowspan="1" colspan="1">2.09</td><td align="char" char="." rowspan="1" colspan="1">2.61</td><td align="char" char="." rowspan="1" colspan="1">4.58</td><td align="char" char="." rowspan="1" colspan="1">3.11</td></tr><tr><td align="left" rowspan="1" colspan="1">4</td><td align="char" char="." rowspan="1" colspan="1">4.27</td><td align="char" char="." rowspan="1" colspan="1">2.00</td><td align="char" char="." rowspan="1" colspan="1">2.04</td><td align="char" char="." rowspan="1" colspan="1">2.70</td><td align="char" char="." rowspan="1" colspan="1">0.83</td><td align="char" char="." rowspan="1" colspan="1">5.79</td><td align="char" char="." rowspan="1" colspan="1">2.94</td></tr><tr><td align="left" rowspan="1" colspan="1">3</td><td align="char" char="." rowspan="1" colspan="1">3.63</td><td align="char" char="." rowspan="1" colspan="1">2.67</td><td align="char" char="." rowspan="1" colspan="1">2.29</td><td align="char" char="." rowspan="1" colspan="1">3.25</td><td align="char" char="." rowspan="1" colspan="1">2.20</td><td align="char" char="." rowspan="1" colspan="1">3.26</td><td align="char" char="." rowspan="1" colspan="1">2.89</td></tr><tr><td align="left" rowspan="1" colspan="1">6</td><td align="char" char="." rowspan="1" colspan="1">1.06</td><td align="char" char="." rowspan="1" colspan="1">2.26</td><td align="char" char="." rowspan="1" colspan="1">1.36</td><td align="char" char="." rowspan="1" colspan="1">1.26</td><td align="char" char="." rowspan="1" colspan="1">4.48</td><td align="char" char="." rowspan="1" colspan="1">3.50</td><td align="char" char="." rowspan="1" colspan="1">2.32</td></tr><tr><td align="left" rowspan="1" colspan="1">8</td><td align="char" char="." rowspan="1" colspan="1">0.21</td><td align="char" char="." rowspan="1" colspan="1">0.68</td><td align="char" char="." rowspan="1" colspan="1">0.19</td><td align="char" char="." rowspan="1" colspan="1">0.38</td><td align="char" char="." rowspan="1" colspan="1">0.25</td><td align="char" char="." rowspan="1" colspan="1">2.12</td><td align="char" char="." rowspan="1" colspan="1">0.64</td></tr><tr><td align="left" rowspan="1" colspan="1">2</td><td align="char" char="." rowspan="1" colspan="1">0.38</td><td align="char" char="." rowspan="1" colspan="1">0.29</td><td align="char" char="." rowspan="1" colspan="1">0.19</td><td align="char" char="." rowspan="1" colspan="1">0.51</td><td align="char" char="." rowspan="1" colspan="1">0.17</td><td align="char" char="." rowspan="1" colspan="1">1.31</td><td align="char" char="." rowspan="1" colspan="1">0.47</td></tr><tr><td align="left" rowspan="1" colspan="1">9</td><td align="char" char="." rowspan="1" colspan="1">0.38</td><td align="char" char="." rowspan="1" colspan="1">0.64</td><td align="char" char="." rowspan="1" colspan="1">0.42</td><td align="char" char="." rowspan="1" colspan="1">0.44</td><td align="char" char="." rowspan="1" colspan="1">0.41</td><td align="char" char="." rowspan="1" colspan="1">0.44</td><td align="char" char="." rowspan="1" colspan="1">0.46</td></tr><tr><td align="left" rowspan="1" colspan="1">7</td><td align="char" char="." rowspan="1" colspan="1">0.13</td><td align="char" char="." rowspan="1" colspan="1">0.48</td><td align="char" char="." rowspan="1" colspan="1">0.00</td><td align="char" char="." rowspan="1" colspan="1">0.21</td><td align="char" char="." rowspan="1" colspan="1">0.54</td><td align="char" char="." rowspan="1" colspan="1">0.54</td><td align="char" char="." rowspan="1" colspan="1">0.32</td></tr><tr><td align="left" rowspan="1" colspan="1">10</td><td align="char" char="." rowspan="1" colspan="1">0.00</td><td align="char" char="." rowspan="1" colspan="1">0.00</td><td align="char" char="." rowspan="1" colspan="1">0.00</td><td align="char" char="." rowspan="1" colspan="1">0.00</td><td align="char" char="." rowspan="1" colspan="1">0.00</td><td align="char" char="." rowspan="1" colspan="1">0.00</td><td align="char" char="." rowspan="1" colspan="1">0.00</td></tr><tr><td align="left" rowspan="1" colspan="1">11</td><td align="char" char="." rowspan="1" colspan="1">0.00</td><td align="char" char="." rowspan="1" colspan="1">0.00</td><td align="char" char="." rowspan="1" colspan="1">0.00</td><td align="char" char="." rowspan="1" colspan="1">0.00</td><td align="char" char="." rowspan="1" colspan="1">0.00</td><td align="char" char="." rowspan="1" colspan="1">0.00</td><td align="char" char="." rowspan="1" colspan="1">0.00</td></tr></tbody></table><table-wrap-foot><fn><p>For each of the classes the mean average as a percentage of overall predicted exons was calculated. 5% of all exons predicted are class 12, while &#x0223c;19% are class 13.</p></fn></table-wrap-foot></table-wrap><p>The second and third largest classes of exons are 13 and 12, respectively, the wrong exons. The next most frequently occurring group of exons are those termed &#x02018;Partially Correct&#x02019; (classes 3&#x02013;6), where each exon correctly matches one boundary. Each class makes up &#x0223c;2.8% of total number of predicted exons. For each of the overlapping exon classes 2, 7, 8 and 9, they each comprise &#x0223c;0.5% of all exons predicted. Class 10 exons would break the standard splice site rules as a predicted exon has a 3&#x02032; boundary that matches a known 5&#x02032; donor site. Class 11 exons would have a 5&#x02032; boundary on an acceptor splice site. No exons of either of these last two classes were predicted.</p><p>A potential discrepancy appears between the class 1 exons of <xref ref-type="table" rid="tbl3">Table 3</xref> and the CR percentage of <xref ref-type="table" rid="tbl1">Table 1</xref>. It would seem that these should be approximately equivalent as we are calculating statistics based on both exon boundaries matching. The difference however is in the method of calculating the average. The statistics in <xref ref-type="table" rid="tbl1">Table 1</xref> are a normalized distribution (the sum of the correct exon frequencies for all sequences) of exons for each sequence. Conversely the averages in <xref ref-type="table" rid="tbl3">Table 3</xref> have not been normalized, but are the simple count of predicted exons for each class divided by the total number of predicted exons.</p><p>Looking at the raw percentages of <xref ref-type="table" rid="tbl3">Table 3</xref>, it would seem that Twinscan is by far the most effective genefinder, almost ten percentage points above GenomeScan. However given its method of calculation, the high results for Twinscan may have been skewed by high accuracy on a few sequences with an abnormally high exon count. These results are not invalid, but indicate that Twinscan could be more effective on longer sequences. Further testing would be required to confirm this.</p><p>The purpose in creating this PET was to identify patterns of inaccuracy in all HMM genefinders. The following questions were posed: Is there any class of exon that is never predicted? If so how does this class relate to its boundaries? Do any patterns materialize around the 5&#x02032; or 3&#x02032; ends of a gene? Are there any patterns evident to &#x02018;internal&#x02019; exons? Do intronless genes display any peculiar pattern? Which patterns occur in each class given a particular exon feature? How far away are incorrectly predicted boundaries from real boundaries?</p><p>In answering the first question no exons was correctly predicted in classes 10 and 11. Beyond this GenomeScan was the only genefinder that did not predict an exon of every class. It found no class 7 exons. The distribution of class 7 exons is displayed in <xref ref-type="table" rid="tbl4">Table 4</xref>. Again we see GenomeScan's continued effectiveness.</p><p>With regard to the 5&#x02032; boundary of a multi-exon gene it is clear (from <xref ref-type="table" rid="tbl5">Table 5</xref>) that class 5 initial exons tend to occur twice as much as class 3 initial exons. This shows that HMM genefinders are more conservative and tend to predict shorter initial exons on the 5&#x02032; side of the exon. It also shows that the 3&#x02032; end of the first coding exon tends to be accurately identified.</p><table-wrap id="tbl4" position="float"><label>Table 4</label><caption><p>Class seven exon distribution by genefinder and feature</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="1" colspan="1">Genefinder</th><th align="left" rowspan="1" colspan="1">Initial</th><th align="left" rowspan="1" colspan="1">Internal</th><th align="left" rowspan="1" colspan="1">Term</th><th align="left" rowspan="1" colspan="1">Single</th></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">Augustus</td><td align="left" rowspan="1" colspan="1">0</td><td align="left" rowspan="1" colspan="1">2</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">0</td></tr><tr><td align="left" rowspan="1" colspan="1">Genezilla</td><td align="left" rowspan="1" colspan="1">3</td><td align="left" rowspan="1" colspan="1">9</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">2</td></tr><tr><td align="left" rowspan="1" colspan="1">GenomeScan</td><td align="left" rowspan="1" colspan="1">0</td><td align="left" rowspan="1" colspan="1">0</td><td align="left" rowspan="1" colspan="1">0</td><td align="left" rowspan="1" colspan="1">0</td></tr><tr><td align="left" rowspan="1" colspan="1">GlimmerHMM</td><td align="left" rowspan="1" colspan="1">2</td><td align="left" rowspan="1" colspan="1">4</td><td align="left" rowspan="1" colspan="1">0</td><td align="left" rowspan="1" colspan="1">0</td></tr><tr><td align="left" rowspan="1" colspan="1">Twinscan</td><td align="left" rowspan="1" colspan="1">0</td><td align="left" rowspan="1" colspan="1">8</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">4</td></tr><tr><td align="left" rowspan="1" colspan="1">SNAP (<italic>H.sapiens</italic>)</td><td align="left" rowspan="1" colspan="1">6</td><td align="left" rowspan="1" colspan="1">9</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">0</td></tr></tbody></table><table-wrap-foot><fn><p>GenomeScan was the only genefinder to predict zero exons for a class (no including classes 10 and 11 as no genefinder predicted these). Term is an abbreviation for Terminal.</p></fn></table-wrap-foot></table-wrap><table-wrap id="tbl5" position="float"><label>Table 5</label><caption><p>Initial and terminal exon comparison</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="1" colspan="1"/><th align="left" rowspan="1" colspan="1">3 Initial</th><th align="left" rowspan="1" colspan="1">5 Initial</th><th align="left" rowspan="1" colspan="1">4 Terminal</th><th align="left" rowspan="1" colspan="1">6 Terminal</th><th align="left" rowspan="1" colspan="1">4 Single</th><th align="left" rowspan="1" colspan="1">6 Single</th></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">Augustus</td><td align="left" rowspan="1" colspan="1">12</td><td align="left" rowspan="1" colspan="1">22</td><td align="left" rowspan="1" colspan="1">26</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">6</td><td align="left" rowspan="1" colspan="1">0</td></tr><tr><td align="left" rowspan="1" colspan="1">GeneZilla</td><td align="left" rowspan="1" colspan="1">17</td><td align="left" rowspan="1" colspan="1">52</td><td align="left" rowspan="1" colspan="1">22</td><td align="left" rowspan="1" colspan="1">8</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">0</td></tr><tr><td align="left" rowspan="1" colspan="1">GenomeScan</td><td align="left" rowspan="1" colspan="1">2</td><td align="left" rowspan="1" colspan="1">15</td><td align="left" rowspan="1" colspan="1">5</td><td align="left" rowspan="1" colspan="1">3</td><td align="left" rowspan="1" colspan="1">1</td><td align="left" rowspan="1" colspan="1">0</td></tr><tr><td align="left" rowspan="1" colspan="1">GlimmerHMM</td><td align="left" rowspan="1" colspan="1">16</td><td align="left" rowspan="1" colspan="1">36</td><td align="left" rowspan="1" colspan="1">23</td><td align="left" rowspan="1" colspan="1">6</td><td align="left" rowspan="1" colspan="1">4</td><td align="left" rowspan="1" colspan="1">0</td></tr><tr><td align="left" rowspan="1" colspan="1">Twinscan</td><td align="left" rowspan="1" colspan="1">8</td><td align="left" rowspan="1" colspan="1">29</td><td align="left" rowspan="1" colspan="1">3</td><td align="left" rowspan="1" colspan="1">3</td><td align="left" rowspan="1" colspan="1">2</td><td align="left" rowspan="1" colspan="1">0</td></tr><tr><td align="left" rowspan="1" colspan="1">SNAP (<italic>H.sapiens</italic>)</td><td align="left" rowspan="1" colspan="1">35</td><td align="left" rowspan="1" colspan="1">74</td><td align="left" rowspan="1" colspan="1">92</td><td align="left" rowspan="1" colspan="1">3</td><td align="left" rowspan="1" colspan="1">8</td><td align="left" rowspan="1" colspan="1">0</td></tr><tr><td align="left" rowspan="1" colspan="1">SNAP (<italic>A.thaliana</italic>)</td><td align="left" rowspan="1" colspan="1">41</td><td align="left" rowspan="1" colspan="1">99</td><td align="left" rowspan="1" colspan="1">74</td><td align="left" rowspan="1" colspan="1">9</td><td align="left" rowspan="1" colspan="1">28</td><td align="left" rowspan="1" colspan="1">0</td></tr></tbody></table></table-wrap><p>At the other end of the gene, class 4 terminal exons generally occur much more frequently than class 6 terminals. Instead of returning conservative results, genefinders are much more likely to predict exons extending into the 3&#x02032;-UTR, than stopping before the stop codon. This is further supported by the fact that no genefinder predicted a class 6 single exon. Interestingly GeneZilla, whose output include Poly(A) tail annotation fared similarly to the other genefinders, when one might expect a genefinder with more states in its state model to be more accurate around the 3&#x02032; boundary.</p><p>Comparing the averages (<xref ref-type="table" rid="tbl3">Table 3</xref>) we see that class 13 exons occur more than three times as frequently as class 12. Further investigation showed that class 13 exons' average distance from their reference exon (5668 bases) is slightly more than half the distance of class 12 exons (10&#x02009;489 bases). Thus genefinders seem more likely to predict exons nearer to the 3&#x02032; side of actual exons, and conversely are less likely to predict exons 5&#x02032; of a TE.</p><p>Before SNAP was trained on human DNA sequences, it was trained on <italic>Arabidopsis</italic>. All of patterns identified above, occurred to a similar degree in the SNAP (<italic>A.thaliana</italic>) results. First, class 5 initial exons were predicted twice as much as class 3 initial exons. Second, a tendency to predict exons which extend into the 3&#x02032;-UTR region. Class 13 exons still occur &#x0223c;3 times as often as class 12, and at an average distance (7064 bases) significantly closer to an actual exon than class 12 (12&#x02009;164 bases).</p><p>Each of the patterns described above is a specific item for potential and measurable improvement in HMM genefinders. A new 5&#x02032;-UTR-specific model may be ideal to reduce initial class 5 exons, while concurrently keeping class 3 low. The quality of new 3&#x02032;-UTR and Poly(A) tail models can be assessed against previous results to ensure that the count of class 6 terminal exons is not increasing, if one reduces the number of class 4 terminal exons. Using the PET, one can compare models by class to ensure the count of exons of a particular class are decreasing (or increasing if it is class 1). One can measure the different ratios of each class to precisely verify the affects of a change to a model.</p></sec></sec><sec><title>HOMOLOGY AND SIMILARITY</title><p>Two genefinders tested include homology by default, Genomescan and Twinscan. GenomeScan scored highest at exon level in <xref ref-type="table" rid="tbl1">Table 1</xref>, while Twinscan scored highest in class 1 exons in <xref ref-type="table" rid="tbl3">Table 3</xref>. The homologs used for Twinscan are incorporated into the system by the developer, whereas GenomeScan requires the researcher to provide homologous sequences. If a suitable homolog set is not available then neither of these two may provide high-quality results.</p><p>Furthermore regarding similarity, we can see SNAP's results on two different training sets, human and plant. The difference in results is clearly seen, with SNAP having much higher performance when trained on a human data for testing on human DNA sequences. This underscores an already prevalent theme that training on the same organism, if not at least homologous organism is vital for good genefinder performance.</p></sec><sec><title>CONCLUDING REMARKS</title><p>In summary we have evaluated the most recent HMM-based genefinders upon an independent test set, and it seems the latest generation of genefinders does not perform vastly better than those tested 5 years ago. No one genefinder can be decisively named the best, but GenomeScan seemed to perform most noteworthy. The other homology incorporating genefinder, Twinscan produced solid results at the nucleotide level and in raw exons annotated correctly.</p><p>We also grouped every predicted exon into one of thirteen classes based on our comprehensive and novel taxonomy. With this we can more precisely measure the performance of all genefinders, and the effects a change has on their output. We identified four patterns of inaccuracy common to all HMM-based genefinders. As these patterns occur in all genefinders some fundamental shift may be needed to obtain consistently higher performance.</p></sec><sec sec-type="supplementary-material"><title>SUPPLEMENTARY DATA</title><p>Supplementary Data are available at NAR online.</p>
<supplementary-material id="PMC_1" content-type="local-data">
<caption>
<title>[Supplementary Data]</title>
</caption>
<media mimetype="text" mime-subtype="html" xlink:href="nar_gkl1026_index.html"/>
<media xlink:role="associated-file" mimetype="application" mime-subtype="msword"
xlink:href="nar_gkl1026_nar-02237-d-2006-File002.doc"/>
<media xlink:role="associated-file" mimetype="text" mime-subtype="plain"
xlink:href="nar_gkl1026_nar-02237-d-2006-File003.txt"/>
<media xlink:role="associated-file" mimetype="text" mime-subtype="plain"
xlink:href="nar_gkl1026_nar-02237-d-2006-File004.txt"/>
</supplementary-material>
</sec></body><back><ack><p>We would like to thank the two anonymous reviewers, Mikael Bod&#x000e9;n, Justin Rough, Robert Dew, Jason Wells and Drew Quillam for their valuable time and insights. Funding to pay the Open Access publication charges for this article was provided by Australia Research Council Grant and Faculty of Science and Technology Deakin University.</p><p><italic>Conflict of interest statement.</italic> None declared.</p></ack><ref-list><title>REFERENCES</title><ref id="b1"><label>1</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fickett</surname><given-names>J.W.</given-names></name></person-group><article-title>Recognition of protein coding regions in DNA sequences</article-title><source>Nucleic Acids Res.</source><year>1982</year><volume>10</volume><fpage>5303</fpage><lpage>5318</lpage><pub-id pub-id-type="pmid">7145702</pub-id></element-citation></ref><ref id="b2"><label>2</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Meyer</surname><given-names>I.</given-names></name><name><surname>Durbin</surname><given-names>R.</given-names></name></person-group><article-title>Comparative <italic>ab initio</italic> prediction of gene structures using pair HMMs</article-title><source>Bioinformatics</source><year>2002</year><volume>18</volume><fpage>1309</fpage><lpage>1318</lpage><pub-id pub-id-type="pmid">12376375</pub-id></element-citation></ref><ref id="b3"><label>3</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yeh</surname><given-names>R.F.</given-names></name><name><surname>Lim</surname><given-names>L.P.</given-names></name><name><surname>Burge</surname><given-names>C.B.</given-names></name></person-group><article-title>Computational inference of homologous gene structures in the human genome</article-title><source>Genome Res.</source><year>2001</year><volume>11</volume><fpage>803</fpage><lpage>816</lpage><pub-id pub-id-type="pmid">11337476</pub-id></element-citation></ref><ref id="b4"><label>4</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Hu</surname><given-names>P.</given-names></name><name><surname>Brent</surname><given-names>M.R.</given-names></name></person-group><article-title>Using TWINSCAN to predict gene structures in genomic DNA sequences</article-title><source>Curr. Protocols Bioinformatics</source><year>2003</year><fpage>4.8.1</fpage><lpage>4.8.19</lpage></element-citation></ref><ref id="b5"><label>5</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>M.</given-names></name></person-group><article-title>Computational prediction of eukaryotic protein-coding genes</article-title><source>Nature Rev. Genet.</source><year>2002</year><volume>3</volume><fpage>698</fpage><lpage>709</lpage><pub-id pub-id-type="pmid">12209144</pub-id></element-citation></ref><ref id="b6"><label>6</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Math&#x000e9;</surname><given-names>C.</given-names></name><name><surname>Sagot</surname><given-names>M.F.</given-names></name><name><surname>Schiex</surname><given-names>T.</given-names></name><name><surname>Rouz&#x000e9;</surname><given-names>P.</given-names></name></person-group><article-title>Current methods of gene prediction, their strengths and weaknesses</article-title><source>Nucleic Acids Res.</source><year>2002</year><volume>30</volume><fpage>4103</fpage><lpage>4117</lpage><pub-id pub-id-type="pmid">12364589</pub-id></element-citation></ref><ref id="b7"><label>7</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>Z.</given-names></name><name><surname>Chen</surname><given-names>Y.</given-names></name><name><surname>Li</surname><given-names>Y.</given-names></name></person-group><article-title>A brief review of computational gene prediction methods</article-title><source>Genome Proteomics Bioinformatics</source><year>2004</year><volume>2</volume><fpage>216</fpage><lpage>221</lpage></element-citation></ref><ref id="b8"><label>8</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rabiner</surname><given-names>L.</given-names></name></person-group><article-title>A tutorial on hidden Markov models and selected applications in speech recognition</article-title><source>Proc. IEEE</source><year>1989</year><volume>77</volume><fpage>257</fpage><lpage>285</lpage></element-citation></ref><ref id="b9"><label>9</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Durbin</surname><given-names>R.</given-names></name><name><surname>Eddy</surname><given-names>S.</given-names></name><name><surname>Krogh</surname><given-names>A.</given-names></name><name><surname>Mitchison</surname><given-names>G.</given-names></name></person-group><source>Biological Sequence Analysis Probabilistic Models of Proteins and Nucleic Acids</source><year>1998</year><publisher-loc>Cambridge</publisher-loc><publisher-name>Cambridge University Press</publisher-name></element-citation></ref><ref id="b10"><label>10</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Yang</surname><given-names>J.</given-names></name><name><surname>Xu</surname><given-names>Y.</given-names></name><name><surname>Chen</surname><given-names>C.</given-names></name></person-group><article-title>Gesture interface, modeling and learning</article-title><year>1994</year><conf-name>Proceedings of the 1994 IEEE International Conference on Robotics and Automation</conf-name><publisher-loc>San Diego, CA</publisher-loc><publisher-name>IEEE Computer Society Press</publisher-name><fpage>1747</fpage><lpage>1752</lpage></element-citation></ref><ref id="b11"><label>11</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rabiner</surname><given-names>L.</given-names></name><name><surname>Juang</surname><given-names>B.H.</given-names></name></person-group><article-title>An introduction to hidden Markov models</article-title><source>IEEE ASSP Mag.</source><year>1986</year><volume>3</volume><fpage>4</fpage><lpage>16</lpage></element-citation></ref><ref id="b12"><label>12</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Forney</surname><given-names>J.D.</given-names><suffix>Jr</suffix></name></person-group><article-title>The Viterbi algorithm</article-title><source>Proc. IEEE</source><year>1973</year><volume>61</volume><fpage>268</fpage><lpage>278</lpage></element-citation></ref><ref id="b13"><label>13</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Majoros</surname><given-names>W.H.</given-names></name><name><surname>Pertea</surname><given-names>M.</given-names></name><name><surname>Delcher</surname><given-names>A.L.</given-names></name><name><surname>Salzberg</surname><given-names>S.L.</given-names></name></person-group><article-title>Efficient decoding algorithms for generalized hidden Markov model gene finders</article-title><source>BMC Bioinformatics</source><year>2005</year><volume>6</volume><fpage>16</fpage><pub-id pub-id-type="pmid">15667658</pub-id></element-citation></ref><ref id="b14"><label>14</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Stanke</surname><given-names>M.</given-names></name><name><surname>Waack</surname><given-names>S.</given-names></name></person-group><article-title>Gene prediction with a hidden Markov model and a new intron submodel</article-title><source>Bioinformatics</source><year>2003</year><volume>19</volume><fpage>ii215</fpage><lpage>ii225</lpage><pub-id pub-id-type="pmid">14534192</pub-id></element-citation></ref><ref id="b15"><label>15</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Majoros</surname><given-names>W.H.</given-names></name><name><surname>Pertea</surname><given-names>M.</given-names></name><name><surname>Salzberg</surname><given-names>S.L.</given-names></name></person-group><article-title>TigrScan and GlimmerHMM: two open source <italic>ab initio</italic> eukaryotic gene-finders</article-title><source>Bioinformatics</source><year>2004</year><volume>20</volume><fpage>2878</fpage><lpage>2879</lpage><pub-id pub-id-type="pmid">15145805</pub-id></element-citation></ref><ref id="b16"><label>16</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Korf</surname><given-names>I.</given-names></name></person-group><article-title>Gene finding in novel genomes</article-title><source>BMC Bioinformatics</source><year>2004</year><volume>5</volume><fpage>59</fpage><pub-id pub-id-type="pmid">15144565</pub-id></element-citation></ref><ref id="b17"><label>17</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Korf</surname><given-names>I.</given-names></name><name><surname>Flicek</surname><given-names>P.</given-names></name><name><surname>Duan</surname><given-names>D.</given-names></name><name><surname>Brent</surname><given-names>M.R.</given-names></name></person-group><article-title>Integrating genomic homology into gene structure prediction</article-title><source>Bioinformatics</source><year>2001</year><volume>17</volume><fpage>S140</fpage><lpage>S148</lpage><pub-id pub-id-type="pmid">11473003</pub-id></element-citation></ref><ref id="b18"><label>18</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Burset</surname><given-names>M.</given-names></name><name><surname>Guig&#x000f3;</surname><given-names>R.</given-names></name></person-group><article-title>Evaluation of gene structure prediction programs</article-title><source>Genomics</source><year>1996</year><volume>34</volume><fpage>353</fpage><lpage>367</lpage><pub-id pub-id-type="pmid">8786136</pub-id></element-citation></ref><ref id="b19"><label>19</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rogic</surname><given-names>S.</given-names></name><name><surname>Mackworth</surname><given-names>A.K.</given-names></name><name><surname>Ouellette</surname><given-names>F.B.F.</given-names></name></person-group><article-title>Evaluation of gene-finding programs on mammalian sequences</article-title><source>Genome Res.</source><year>2001</year><volume>11</volume><fpage>817</fpage><lpage>832</lpage><pub-id pub-id-type="pmid">11337477</pub-id></element-citation></ref><ref id="b20"><label>20</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Altschul</surname><given-names>S.F.</given-names></name><name><surname>Madden</surname><given-names>T.L.</given-names></name><name><surname>Sch&#x000e4;ffer</surname><given-names>A.A.</given-names></name><name><surname>Zhang</surname><given-names>J.</given-names></name><name><surname>Zhang</surname><given-names>Z.</given-names></name><name><surname>Miller</surname><given-names>W.</given-names></name><name><surname>Lipman</surname><given-names>D.J.</given-names></name></person-group><article-title>Gapped BLAST and PSI-BLAST: a new generation of protein database search programs</article-title><source>Nucleic Acids Res.</source><year>1997</year><volume>25</volume><fpage>3389</fpage><lpage>3402</lpage><pub-id pub-id-type="pmid">9254694</pub-id></element-citation></ref><ref id="b21"><label>21</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Issac</surname><given-names>B.</given-names></name><name><surname>Raghava</surname><given-names>G.P.S.</given-names></name></person-group><article-title>EGPred: prediction of eukaryotic genes using <italic>ab initio</italic> methods after combining with sequence similarity approaches</article-title><source>Genome Res.</source><year>2004</year><volume>14</volume><fpage>1756</fpage><lpage>1766</lpage><pub-id pub-id-type="pmid">15342559</pub-id></element-citation></ref><ref id="b22"><label>22</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Kulp</surname><given-names>D.</given-names></name><name><surname>Haussler</surname><given-names>D.</given-names></name><name><surname>Reese</surname><given-names>M.G.</given-names></name><name><surname>Eeckman</surname><given-names>F.H.</given-names></name></person-group><person-group person-group-type="editor"><name><surname>States</surname><given-names>D.</given-names></name><name><surname>Agarwal</surname><given-names>P.</given-names></name><name><surname>Gaasterland</surname><given-names>T.</given-names></name><name><surname>Hunter</surname><given-names>L.</given-names></name><name><surname>Smith</surname><given-names>R.</given-names></name></person-group><article-title>A generalized hidden Markov model for the recognition of human genes in DNA</article-title><year>1996</year><conf-name>Proceedings of the Fourth International Conference on Intelligent System for Molecular Biology</conf-name><publisher-loc>Menlo Park, CA</publisher-loc><publisher-name>AAAI Press</publisher-name><fpage>134</fpage><lpage>142</lpage></element-citation></ref><ref id="b23"><label>23</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>M.Q.</given-names></name></person-group><article-title>Identification of protein coding regions in the human genome by quadratic discriminant analysis</article-title><source>Proc. Natl Acad. Sci. USA</source><year>1997</year><volume>94</volume><fpage>565</fpage><lpage>568</lpage><pub-id pub-id-type="pmid">9012824</pub-id></element-citation></ref></ref-list></back></article>
